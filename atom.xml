<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Choas🥝</title>
  
  
  <link href="https://choas8.github.io/atom.xml" rel="self"/>
  
  <link href="https://choas8.github.io/"/>
  <updated>2025-03-23T10:51:51.030Z</updated>
  <id>https://choas8.github.io/</id>
  
  <author>
    <name>Choas🥝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>k230学习笔记-pwm控制，uart串口通讯，adc转换，rtc时钟，tim定时器，wdt看门狗</title>
    <link href="https://choas8.github.io/posts/ae0e3fa9.html"/>
    <id>https://choas8.github.io/posts/ae0e3fa9.html</id>
    <published>2025-03-27T10:45:00.000Z</published>
    <updated>2025-03-23T10:51:51.030Z</updated>
    
    <content type="html"><![CDATA[<h1>第三章 PWM控制</h1><h2 id="1-PWM介绍">1. PWM介绍</h2><p>PWM（Pulse Width Modulation，脉宽调制）是一种在嵌入式系统中常用的技术，它可以用来模拟信号，控制设备的功率输出或者实现对设备的精确控制。PWM信号是一种类似于方波的信号，具有固定的频率，但脉冲宽度（占空比）可以调整。在一定频率下，我们可以通过调整这个占空比来改变他的有效电压，在一定程度上可以实现D/A转换（数字量转模拟量，不过一般来说都是用DAC，本开发板K230的DAC已经被连接到了3.5mm耳机孔上面了，可以用来播放音频）。</p><ul><li>频率（Frequency）：指PWM信号在一秒内循环的次数。频率是周期的倒数，单位是赫兹（Hz）。</li><li>周期（Period）：指一个完整的PWM信号的时间长度，与频率成反比。单位是秒（s）。</li><li>脉宽（Pulse Width）：指PWM信号中高电平（通常为1）的时间长度。单位是秒（s）或毫秒（ms）。</li><li>占空比(Duty Ratio)：表示在一个完整的PWM信号周期内，高电平（通常为1）所占的时间比例。占空比 = （脉宽 / 周期）x 100%。</li><li>上升沿（Rising Edge）：PWM信号从低电平跳变到高电平的瞬间，通常用来作为触发事件。</li><li>下降沿（Falling Edge）：PWM信号从高电平跳变到低电平的瞬间，也常被用作触发事件。</li><li>正脉冲宽度（Positive Pulse Width）：PWM信号中高电平的持续时间，一般情况下的脉宽指的就是这个。</li><li>负脉冲宽度（Negative Pulse Width）：PWM信号中低电平的持续时间。</li></ul><h2 id="2-开发板上的PWM">2. 开发板上的PWM</h2><p><img src="https://wiki.lckfb.com/storage/images/zh-hans/lushan-pi-k230/basic/pwm/pwm_20241024_140755.png" alt=""></p><table><thead><tr><th>排针引脚号</th><th>芯片引脚号</th><th>PWM通道号</th></tr></thead><tbody><tr><td>12</td><td>GPIO 47</td><td>PWM3</td></tr><tr><td>26</td><td>GPIO 61</td><td>PWM1</td></tr><tr><td>32</td><td>GPIO 46</td><td>PWM2</td></tr><tr><td>33</td><td>GPIO 52</td><td>PWM4</td></tr><tr><td>35</td><td>GPIO 42</td><td>PWM0</td></tr></tbody></table><h2 id="3-PWM基础配置">3. PWM基础配置</h2><h3 id="3-1-引脚复用为PWM模式">3.1 引脚复用为PWM模式</h3><p>先用<code>FPIOA</code>的<code>set_function</code>方法把对应GPIO配置为PWM模式。如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> FPIOA</span><br><span class="line"></span><br><span class="line">test = FPIOA()</span><br><span class="line"></span><br><span class="line">test.set_function(<span class="number">47</span>, FPIOA.PWM3)</span><br><span class="line">test.set_function(<span class="number">61</span>, FPIOA.PWM1)</span><br><span class="line">test.set_function(<span class="number">46</span>, FPIOA.PWM2)</span><br><span class="line">test.set_function(<span class="number">52</span>, FPIOA.PWM4)</span><br><span class="line">test.set_function(<span class="number">42</span>, FPIOA.PWM0)</span><br></pre></td></tr></table></figure><h3 id="3-2-配置PWM模块">3.2 配置PWM模块</h3><h4 id="3-2-1-导入模块">3.2.1 导入模块</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> PWM</span><br></pre></td></tr></table></figure><h4 id="3-2-2-构造函数">3.2.2 构造函数</h4><p>用于构造pin对象，可同时对引脚进行初始化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwm = PWM(channel, freq, duty=<span class="number">50</span>, enable=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><h5 id="3-2-2-1-参数">3.2.2.1 参数</h5><ul><li><code>channel</code>: PWM 通道号，取值范围为 [0, 5]。</li><li><code>freq</code>: PWM 通道输出频率。单位为Hz。</li><li><code>duty</code>: PWM 通道输出占空比，表示高电平在整个周期中的百分比，取值范围为 [0, 100]，支持小数点。可选参数，默认值为 50。</li><li><code>enable</code>: PWM 通道输出是否立即使能，可选参数，默认值为 False。</li></ul><h4 id="3-2-3-freq方法">3.2.3 freq方法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwm.freq(freq)</span><br></pre></td></tr></table></figure><p>获取或设置 PWM 通道的输出频率。</p><h5 id="3-2-3-1-参数">3.2.3.1 参数</h5><ul><li><code>freq</code>: PWM 通道输出频率，可选参数。如果不传入参数，则返回当前频率。</li></ul><h5 id="3-2-3-2-返回值">3.2.3.2 返回值</h5><p>返回当前 PWM 通道的输出频率或空。</p><h4 id="3-2-4-duty方法">3.2.4 duty方法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwm.duty(duty)</span><br></pre></td></tr></table></figure><p>获取或设置 PWM 通道的输出占空比。</p><h5 id="3-2-4-1-参数">3.2.4.1 参数</h5><ul><li><code>duty</code>: PWM 通道输出占空比，可选参数。支持小数点。如果不传入参数，则返回当前占空比。</li></ul><h5 id="3-2-4-2-返回值">3.2.4.2 返回值</h5><p>返回当前 PWM 通道的输出占空比或空</p><h4 id="3-2-5-enable方法">3.2.5 enable方法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwm.enable(enable)</span><br></pre></td></tr></table></figure><p>使能或禁用 PWM 通道的输出。</p><h5 id="3-2-5-1-参数">3.2.5.1 参数</h5><ul><li><code>enable</code>: 是否使能 PWM 通道输出。<ul><li><code>True</code>：<code>1</code></li><li><code>False</code>：<code>0</code></li></ul></li></ul><h4 id="3-2-6-deinit方法">3.2.6 deinit方法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwm.deinit()</span><br></pre></td></tr></table></figure><p>释放 PWM 通道的资源。</p><h2 id="4-PWM基础使用">4. PWM基础使用</h2><h3 id="4-1-控制引脚输出PWM信号">4.1 控制引脚输出PWM信号</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> PWM, FPIOA</span><br><span class="line"><span class="comment"># 配置PWM输出引脚</span></span><br><span class="line">pwm = FPIOA()</span><br><span class="line">pwm.set_function(<span class="number">47</span>, FPIOA.PWM3)</span><br><span class="line"><span class="comment"># 初始化PWM</span></span><br><span class="line">pwm_start = PWM(<span class="number">3</span>, <span class="number">2000</span>, <span class="number">50</span>, enable = <span class="literal">True</span>) <span class="comment"># 通道3,频率2KHz,占空比50%,立即使能</span></span><br></pre></td></tr></table></figure><h3 id="4-2-控制蜂鸣器">4.2 控制蜂鸣器</h3><p>下面代码的主要功能就是让蜂鸣器发出一个短暂的4kHz（50%占空比）声音，然后在50毫秒后关闭。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> PWM, FPIOA</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">beep = FPIOA()</span><br><span class="line">beep.set_function(<span class="number">43</span>, FPIOA.PWM1)</span><br><span class="line">beep_pwm = PWM(<span class="number">1</span>, <span class="number">4000</span>, <span class="number">50</span>, enable = <span class="literal">False</span>) <span class="comment"># PWM1,4000KHz,50%,禁止立即输出使能</span></span><br><span class="line">beep_pwm.enable(<span class="number">1</span>) <span class="comment"># 使能PWM输出</span></span><br><span class="line">time.sleep_ms(<span class="number">50</span>)</span><br><span class="line">beep_pwm.enable(<span class="number">0</span>) <span class="comment"># 关闭PWM</span></span><br><span class="line">beep_pwm.deinit() <span class="comment"># 释放PWM</span></span><br></pre></td></tr></table></figure><p>开头就是导入<code>time</code>库用来延时，PWM用来控制引脚输出PWM信号，FPIOA用来将引脚复用为PWM功能。</p><p>接下来实例化FPIOA，设置蜂鸣器的驱动脚<code>GPIO43</code>为PWM通道1输出模式。设置频率为4KHz，占空比为50%，<code>enable=False</code>表示初始化时关闭PWM输出，即默认状态下蜂鸣器不发声。接下来调用<code>beep_pwm.enable(1)</code>让蜂鸣器开始发出4Khz的声音，延时50ms后先关闭PWM输出，来停止蜂鸣器的发声，最后释放一下PWM通道资源，防止在不断电的情况下继续运行其他程序造成的资源占用。</p><h1>第四章 UART串口通讯</h1><h2 id="1-开发板上使用的串口">1. 开发板上使用的串口</h2><p><img src="https://wiki.lckfb.com/storage/images/zh-hans/lushan-pi-k230/basic/pwm/pwm_20241024_140755.png" alt=""></p><p>从上图中可以看到在排针处可以使用<code>串口1</code>，<code>串口2</code>，<code>串口3</code>，<code>串口4</code>。</p><table><thead><tr><th>排针引脚号</th><th>芯片引脚号</th><th>串口功能号</th><th>备注</th></tr></thead><tbody><tr><td>03</td><td>GPIO 49</td><td>UART4_RXD</td><td>同时连入摄像头2（CSI2）用作IIC通讯，板子内部有4.7K的电阻上拉至3.3V</td></tr><tr><td>05</td><td>GPIO 48</td><td>UART4_TXD</td><td>同时连入摄像头2（CSI2）用作IIC通讯，板子内部有4.7K的电阻上拉至3.3V</td></tr><tr><td>08</td><td>GPIO 03</td><td>UART1_TXD</td><td>Na</td></tr><tr><td>10</td><td>GPIO 04</td><td>UART1_RXD</td><td>Na</td></tr><tr><td>11</td><td>GPIO 05</td><td>UART2_TXD</td><td>Na</td></tr><tr><td>13</td><td>GPIO 06</td><td>UART2_RXD</td><td>Na</td></tr><tr><td>27</td><td>GPIO 41</td><td>UART1_RXD</td><td>同时连入摄像头1（CSI1）用作IIC通讯，板子内部有4.7K的电阻上拉至3.3V</td></tr><tr><td>28</td><td>GPIO 40</td><td>UART1_TXD</td><td>同时连入摄像头1（CSI1）用作IIC通讯，板子内部有4.7K的电阻上拉至3.3V</td></tr><tr><td>29</td><td>GPIO 36</td><td>UART4_TXD</td><td>Na</td></tr><tr><td>31</td><td>GPIO 37</td><td>UART4_RXD</td><td>Na</td></tr><tr><td>37</td><td>GPIO 32</td><td>UART3_TXD</td><td>Na</td></tr><tr><td>40</td><td>GPIO 33</td><td>UART3_RXD</td><td>Na</td></tr></tbody></table><h2 id="2-UART基础配置">2. UART基础配置</h2><p>K230 内部集成了五个 UART（通用异步收发传输器）硬件模块，串口3（当前固件没被占用，但如果使用的是Linux+RT-Smart SDK就会被小核占用，如果用最新的CanMV固件则用户可以使用）；串口0（被RT-Smart占用，最新的CanMV K230固件中只在大核中运行了RT-Smart），剩下的串口1，2，3，4均可被用户正常调用。</p><h3 id="2-1-导入模块">2.1 导入模块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> UART, FPIOA</span><br><span class="line"></span><br><span class="line">K230 = FPIOA()</span><br><span class="line"></span><br><span class="line">K230.set_function(<span class="number">11</span>, FPIOA.UART2_TXD)</span><br><span class="line">K230.set_function(<span class="number">12</span>, FPIOA.UART2_RXD)</span><br></pre></td></tr></table></figure><h3 id="2-2-构造函数">2.2 构造函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uart = UART(<span class="built_in">id</span>, baudrate=<span class="number">115200</span>, bits=UART.EIGHTBITS, parity=UART.PARITY_NONE, stop=UART.STOPBITS_ONE)</span><br></pre></td></tr></table></figure><h4 id="2-2-1-参数">2.2.1 参数</h4><ul><li><code>id</code>: UART 模块编号，有效值为 <code>UART.UART1</code>、<code>UART.UART2</code>、<code>UART.UART3</code>、<code>UART.UART4</code>。</li><li><code>baudrate</code>: UART 波特率，可选参数，默认值为 115200。</li><li><code>bits</code>: 每个字符的数据位数，有效值为 <code>UART.FIVEBITS</code>、<code>UART.SIXBITS</code>、<code>UART.SEVENBITS</code>、<code>UART.EIGHTBITS</code>，可选参数，默认值为 <code>UART.EIGHTBITS</code>。</li><li><code>parity</code>: 奇偶校验，有效值为 <code>UART.PARITY_NONE</code>、<code>UART.PARITY_ODD</code>、<code>UART.PARITY_EVEN</code>，可选参数，默认值为 <code>UART.PARITY_NONE</code>。</li><li><code>stop</code>: 停止位数，有效值为 <code>UART.STOPBITS_ONE</code>、<code>UART.STOPBITS_TWO</code>，可选参数，默认值为 <code>UART.STOPBITS_ONE</code>。</li></ul><h3 id="2-3-init方法">2.3 init方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uart.init(baudrate=<span class="number">115200</span>, bits=UART.EIGHTBITS, parity=UART.PARITY_NONE, stop=UART.STOPBITS_ONE)</span><br></pre></td></tr></table></figure><p>配置 UART 参数。</p><h3 id="2-4-read方法">2.4 read方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uart.read(nbytes)</span><br></pre></td></tr></table></figure><p>读取字符。如果指定了 <code>nbytes</code>，则最多读取该数量的字节；否则，将尽可能多地读取数据。</p><h4 id="2-4-1-参数">2.4.1 参数</h4><ul><li><code>nbytes</code>: 最多读取的字节数，可选参数。</li></ul><h4 id="2-4-2-返回值">2.4.2 返回值</h4><p>返回一个包含读取字节的字节对象。</p><h3 id="2-5-readline方法">2.5 readline方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uart.readline()</span><br></pre></td></tr></table></figure><p>读取一行数据，并以换行符结束。</p><h4 id="2-5-1-返回值">2.5.1 返回值</h4><p>返回一个包含读取字节的字节对象。</p><h3 id="2-6-readinto方法">2.6 readinto方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uart.readinto(buf, nbytes)</span><br></pre></td></tr></table></figure><p>将字节读取到 <code>buf</code> 中。如果指定了 <code>nbytes</code>，则最多读取该数量的字节；否则，最多读取 <code>len(buf)</code> 数量的字节。</p><h4 id="2-6-1-参数">2.6.1 参数</h4><ul><li><code>buf</code>: 一个缓冲区对象。</li><li><code>nbytes</code>: 最多读取的字节数，可选参数。</li></ul><h4 id="2-6-2-返回值">2.6.2 返回值</h4><p>返回读取并存入 <code>buf</code> 的字节数。</p><h3 id="2-7-write方法">2.7 write方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uart.write(buf)</span><br></pre></td></tr></table></figure><p>将字节缓冲区写入 UART。</p><h4 id="2-7-1-参数">2.7.1 参数</h4><ul><li><code>buf</code>: 一个缓冲区对象。</li></ul><h4 id="2-7-2-返回值">2.7.2 返回值</h4><p>返回写入的字节数。</p><h3 id="2-8-deinit方法">2.8 deinit方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uart.deinit()</span><br></pre></td></tr></table></figure><p>释放 UART 资源。</p><h2 id="3-UART基础使用示例">3. UART基础使用示例</h2><h3 id="3-1-串口发送数据">3.1 串口发送数据</h3><h4 id="3-1-1-基本发送">3.1.1 基本发送</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> FPIOA, UART</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">k230 = FPIOA()</span><br><span class="line">k230.set_function(<span class="number">11</span>, FPIOA.UART2_TXD)</span><br><span class="line">k230.set_function(<span class="number">12</span>, FPIOA.UART2_RXD)</span><br><span class="line"><span class="comment"># 初始化UART2，波特率115200，8位数据位，无效验位，1位停止位</span></span><br><span class="line">uart = UART(UART.UART2, baudrate = <span class="number">115200</span>, bits = UART.EIGHTBITS, parity = UART.PARITY_NONE, stop = UART.STOPBITS_ONE)</span><br><span class="line"><span class="comment"># 要发送的信息</span></span><br><span class="line">ifo = <span class="string">&quot;hello, k230\n&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    uart.write(ifo)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>引脚配置</strong>：使用 <code>FPIOA</code> 将 GPIO11 和 GPIO12 配置为 UART2 的 TXD 和 RXD 功能。</li><li><strong>初始化UART</strong>：创建一个 UART2 实例，设置波特率为 115200，8 位数据位，无校验，1 位停止位。</li><li><strong>发送数据</strong>：使用 <code>uart.write()</code> 方法将数据发送出去。</li><li><strong>资源释放</strong>：操作完成后，使用 <code>uart.deinit()</code> 方法释放 UART 资源。</li></ul><h4 id="3-1-2-发送字节数组">3.1.2 发送字节数组</h4><p>有时，我们需要和其他外部设备比如STM32进行通讯就需要发送二进制数据，比如各种传感器的原始数据。可以使用字节数组或 <code>bytes</code> 类型的数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> FPIOA, UART</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">k230 = FPIOA()</span><br><span class="line">k230.set_function(<span class="number">11</span>, FPIOA.UART2_TXD)</span><br><span class="line">k230.set_function(<span class="number">12</span>, FPIOA.UART2_RXD)</span><br><span class="line"><span class="comment"># 初始化UART2，波特率115200，8位数据位，无效验位，1位停止位</span></span><br><span class="line">uart = UART(UART.UART2, baudrate = <span class="number">115200</span>, bits = UART.EIGHTBITS, parity = UART.PARITY_NONE, stop = UART.STOPBITS_ONE)</span><br><span class="line"><span class="comment"># 要发送的信息</span></span><br><span class="line">data = <span class="built_in">bytes</span>([<span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x04</span>])</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    uart.write(data)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>基本操作和上面类似，不过如果你还是连入串口助手进行查看数据的话，记得把串口工具的显示格式从<strong>字符串</strong>改为<strong>十六进制</strong>显示，如果连线配置等正常，你就可以在屏幕上看到<code>01 02 03 04</code>这些数据了。</p><h4 id="3-1-3-连续发送数据">3.1.3 连续发送数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> FPIOA, UART</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">k230 = FPIOA()</span><br><span class="line">k230.set_function(<span class="number">11</span>, FPIOA.UART2_TXD)</span><br><span class="line">k230.set_function(<span class="number">12</span>, FPIOA.UART2_RXD)</span><br><span class="line"><span class="comment"># 初始化UART2，波特率115200，8位数据位，无效验位，1位停止位</span></span><br><span class="line">uart = UART(UART.UART2, baudrate = <span class="number">115200</span>, bits = UART.EIGHTBITS, parity = UART.PARITY_NONE, stop = UART.STOPBITS_ONE)</span><br><span class="line"><span class="comment"># 获取传感器的数据</span></span><br><span class="line">value = <span class="number">0</span> </span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    ifo = <span class="string">&quot;Value:&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(value)</span><br><span class="line">    uart.write(ifo)</span><br><span class="line">    value = value + <span class="number">1</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h3 id="3-2-串口接收数据">3.2 串口接收数据</h3><h4 id="3-2-1-基础接收">3.2.1 基础接收</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> FPIOA, UART</span><br><span class="line"></span><br><span class="line">k230 = FPIOA()</span><br><span class="line">k230.set_function(<span class="number">11</span>, FPIOA.UART2_TXD)</span><br><span class="line">k230.set_function(<span class="number">12</span>, FPIOA.UART2_RXD)</span><br><span class="line"><span class="comment"># 初始化UART2，波特率115200，8位数据位，无效验位，1位停止位</span></span><br><span class="line">uart = UART(UART.UART2, baudrate=<span class="number">115200</span>, bits=UART.EIGHTBITS, parity=UART.PARITY_NONE, stop=UART.STOPBITS_ONE)</span><br><span class="line"><span class="comment"># 接收到的数据</span></span><br><span class="line">re_data = <span class="literal">None</span></span><br><span class="line"><span class="keyword">while</span> re_data == <span class="literal">None</span>:</span><br><span class="line">    re_data = uart.read()  <span class="comment"># 读取数据</span></span><br><span class="line"></span><br><span class="line">uart.write(<span class="string">&quot;UART2 Received:&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(re_data))</span><br><span class="line">uart.deinit()</span><br></pre></td></tr></table></figure><h4 id="3-2-2-使用readline方法">3.2.2 使用readline方法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> UART</span><br><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> FPIOA</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置引脚</span></span><br><span class="line">fpioa = FPIOA()</span><br><span class="line">fpioa.set_function(<span class="number">11</span>, FPIOA.UART2_TXD)</span><br><span class="line">fpioa.set_function(<span class="number">12</span>, FPIOA.UART2_RXD)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化UART2，波特率115200，8位数据位，无校验，1位停止位</span></span><br><span class="line">uart = UART(UART.UART2, baudrate=<span class="number">115200</span>, bits=UART.EIGHTBITS, parity=UART.PARITY_NONE, stop=UART.STOPBITS_ONE)</span><br><span class="line"></span><br><span class="line">line = <span class="string">b&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果接收不到数据就一直尝试读取</span></span><br><span class="line"><span class="keyword">while</span> line == <span class="string">b&#x27;&#x27;</span>:</span><br><span class="line">    <span class="comment"># 读取数据</span></span><br><span class="line">    line = uart.read()  <span class="comment"># 尝试读取数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#通过CanMV IDE K230中的串行终端控制台打印出来</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Received:&quot;</span>, line)</span><br><span class="line"></span><br><span class="line"><span class="comment">#通过串口2发送接收到的数据</span></span><br><span class="line">uart.write(<span class="string">&quot;UART2 Received:&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(line))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 释放UART资源</span></span><br><span class="line">uart.deinit()</span><br></pre></td></tr></table></figure><h4 id="3-2-3-使用readinto方法">3.2.3 使用readinto方法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> UART</span><br><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> FPIOA</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置引脚</span></span><br><span class="line">fpioa = FPIOA()</span><br><span class="line">fpioa.set_function(<span class="number">11</span>, FPIOA.UART2_TXD)</span><br><span class="line">fpioa.set_function(<span class="number">12</span>, FPIOA.UART2_RXD)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化UART2，波特率115200，8位数据位，无校验，1位停止位</span></span><br><span class="line">uart = UART(UART.UART2, baudrate=<span class="number">115200</span>, bits=UART.EIGHTBITS, parity=UART.PARITY_NONE, stop=UART.STOPBITS_ONE)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个空的缓冲区，大小为10字节（根据需要调整大小）</span></span><br><span class="line">buffer = <span class="built_in">bytearray</span>(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入循环，如果接收不到数据就一直尝试读取</span></span><br><span class="line">bytes_received = <span class="number">0</span>  <span class="comment"># 记录实际读取到的字节数</span></span><br><span class="line"><span class="keyword">while</span> bytes_received == <span class="number">0</span>:</span><br><span class="line">    <span class="comment"># 使用readinto将数据读取到缓冲区</span></span><br><span class="line">    bytes_received = uart.readinto(buffer)</span><br><span class="line"></span><br><span class="line"><span class="comment">#通过CanMV IDE K230中的串行终端控制台打印出来</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Received:&quot;</span>, buffer[:bytes_received])  <span class="comment"># 仅打印接收到的字节数内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将接收到的数据通过串口2发送回去</span></span><br><span class="line">uart.write(<span class="string">&quot;UART2 Received:&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(buffer[:bytes_received].decode()))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 释放UART资源</span></span><br><span class="line">uart.deinit()</span><br></pre></td></tr></table></figure><h4 id="3-2-4-连续接收数据">3.2.4 连续接收数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> UART</span><br><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> FPIOA</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置引脚</span></span><br><span class="line">fpioa = FPIOA()</span><br><span class="line">fpioa.set_function(<span class="number">11</span>, FPIOA.UART2_TXD)</span><br><span class="line">fpioa.set_function(<span class="number">12</span>, FPIOA.UART2_RXD)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化UART2，波特率115200，8位数据位，无校验，1位停止位</span></span><br><span class="line">uart = UART(UART.UART2, baudrate=<span class="number">115200</span>, bits=UART.EIGHTBITS, parity=UART.PARITY_NONE, stop=UART.STOPBITS_ONE)</span><br><span class="line"></span><br><span class="line">data = <span class="string">b&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    data = uart.read()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> data:</span><br><span class="line">        <span class="comment">#通过CanMV IDE K230中的串行终端控制台打印出来</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Received:&quot;</span>, data)</span><br><span class="line"></span><br><span class="line">        <span class="comment">#通过串口2发送接收到的数据</span></span><br><span class="line">        uart.write(<span class="string">&quot;UART2 Received:&#123;&#125;\n&quot;</span>.<span class="built_in">format</span>(data))</span><br><span class="line">    time.sleep(<span class="number">0.1</span>)  <span class="comment"># 延时避免占用过多CPU资源</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 释放UART资源</span></span><br><span class="line">uart.deinit()</span><br></pre></td></tr></table></figure><h3 id="3-3-串口接发测试">3.3 串口接发测试</h3><p>串口回环测试是验证串口发送和接收功能的有效方法。通过将 UART 的发送端（TXD）和接收端（RXD）连接在一起，可以实现自发自收，检测 UART 模块的工作情况。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> FPIOA, UART</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 UART 引脚</span></span><br><span class="line">k230 = FPIOA()</span><br><span class="line">k230.set_function(<span class="number">11</span>, FPIOA.UART2_TXD)</span><br><span class="line">k230.set_function(<span class="number">12</span>, FPIOA.UART2_RXD)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化 UART2，波特率115200，8位数据位，无效校验位，1位停止位</span></span><br><span class="line">uart = UART(UART.UART2, baudrate=<span class="number">115200</span>, bits=UART.EIGHTBITS, parity=UART.PARITY_NONE, stop=UART.STOPBITS_ONE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">uart_echo</span>():</span><br><span class="line">    uart.write(<span class="string">&quot;UART Echo Test Started. Waiting for data from PC...\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 读取 UART 数据（最大 64 字节），返回一个字节串</span></span><br><span class="line">        re_data = uart.read(<span class="number">64</span>)</span><br><span class="line">        <span class="keyword">if</span> re_data:  <span class="comment"># 如果读取到数据</span></span><br><span class="line">            uart.write(re_data)  <span class="comment"># 将数据回传</span></span><br><span class="line">        time.sleep(<span class="number">0.1</span>)  <span class="comment"># 延时，防止 CPU 占用过高</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    uart_echo()</span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\nExiting...&quot;</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    uart.deinit()  <span class="comment"># 释放 UART 资源</span></span><br></pre></td></tr></table></figure><h1>第五章 ADC转换</h1><h2 id="1-ADC转换基本步骤">1. ADC转换基本步骤</h2><p>模拟信号是一个随时间连续变化的量（例如传感器的电压输出），而数字信号只在有限的离散时间点上取值，并且每个取值只能表示在一定量化精度下的数字代码。ADC 的作用就是定时（或在特定触发下）对模拟电压进行采样，并将每个采样点的电压值经过量化和编码后输出一个数字值。</p><p><strong>一般步骤</strong>：</p><ol><li><strong>采样</strong>：在每个采样时刻使用采样保持电路对输入模拟信号进行快速捕捉，获得瞬间电压值。</li><li><strong>量化</strong>：将采样后的电压值映射到有限离散的电平（量化等级）。例如，一个 10-bit 的 ADC 可以将输入电压范围（0V 到基准电压 Vref）分成 2^10 = 1024 个离散电平。一般单片机最常见的是12bit的分辨率，我们的庐山派使用的主控芯片K230的ADC分辨率是12位的。</li><li><strong>编码</strong>：将量化结果转换为对应的数字二进制码。例如，输入电压接近满量程的一半时，10-bit ADC 输出约为 512（0x200）。</li></ol><h2 id="2-开发板上的ADC">2. 开发板上的ADC</h2><p>虽然K230芯片支持六个通道，但是板子上能用的只有四个，原理图和在板子上的实际位置如下：</p><p>原理图：</p><p><img src="https://wiki.lckfb.com/storage/images/zh-hans/lushan-pi-k230/basic/adc/adc_20241206_155227.png" alt=""></p><p>实际位置:</p><p><img src="https://wiki.lckfb.com/storage/images/zh-hans/lushan-pi-k230/basic/adc/adc_20241206_155542.png" alt=""></p><h2 id="3-ADC基础配置">3. ADC基础配置</h2><p>K230 处理器内部集成了一个 ADC（模数转换）硬件模块，提供 6 个独立通道。该模块的采样分辨率为 12 位，即输出范围为 0-4095，采样速率为 1 MHz。</p><p>ADC 类属于 <code>machine</code> 模块。</p><h3 id="3-1-构造函数">3.1 构造函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adc = ADC(channel)</span><br></pre></td></tr></table></figure><h4 id="3-1-1-参数">3.1.1 参数</h4><ul><li><code>channel</code>: 表示要使用的 ADC 通道号，范围为 [0, 5]。</li></ul><h3 id="3-2-read-u16方法">3.2 read_u16方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ADC.read_u16()</span><br></pre></td></tr></table></figure><p>获取指定通道的当前采样值。</p><h4 id="3-2-1-返回值">3.2.1 返回值</h4><p>返回该 ADC 通道的采样值，范围为 [0, 4095]。</p><h3 id="3-3-read-uv方法">3.3 read_uv方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ADC.read_uv()</span><br></pre></td></tr></table></figure><p>获取指定通道的当前电压值 (微伏)。</p><h4 id="3-3-1-返回值">3.3.1 返回值</h4><p>返回该 ADC 通道的电压值，单位为微伏（uV），范围为 [0, 1800000] 微伏。</p><h2 id="4-ADC基础使用示例">4. ADC基础使用示例</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> ADC</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="comment"># 初始化ADC通道0</span></span><br><span class="line">adc = ADC(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 获取ADC通道0的采样值</span></span><br><span class="line">    adc_value = adc.read_u16()</span><br><span class="line">    <span class="comment"># 获取ADX通道0的电压值</span></span><br><span class="line">    adc_voltage = adc.read_uv()</span><br><span class="line">    <span class="comment"># ADC转换</span></span><br><span class="line">    adc_v = adc_voltage/(<span class="number">1000</span>*<span class="number">1000</span>) <span class="comment"># 转换成电压V</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;ADC Value: %d, Voltage: %d uV, %.6f V&quot;</span> % (adc_value, adc_voltage, adc_v)) <span class="comment"># 采集值，转换微伏，计算伏</span></span><br><span class="line">    time.sleep_ms(<span class="number">100</span>)</span><br></pre></td></tr></table></figure><h1>第六章 RTC时钟</h1><h2 id="1-开发板上的RTC">1. 开发板上的RTC</h2><p>实时时钟（RTC）是指一种能够独立、连续地计量时间的硬件模块。RTC 即使在主系统电源关闭的情况下（例如有备用电池支持）也能持续走时，以确保设备下次启动时仍能获得当前真实时间。庐山派的RTC供电是和ADC的1.8供电是同一个网络，所以当开发板掉电时，开发板的时间也就停止走时了。如果你的项目对系统时间敏感，需要注意一下。</p><p>RTC 内部包含一个计时器电路，通过一个高精度的时钟源（通常是晶振）来计数。这个计数器会根据时间流逝自动增加内部的时间值，包括年、月、日、时、分、秒，从而实现连续计时。当系统需要获取当前时间时，只需从 RTC 的寄存器中读取相关数据即可。</p><h2 id="2-RTC基础配置">2. RTC基础配置</h2><p>K230 提供了一个 RTC（实时时钟）模块，允许用户设置和获取当前系统时间，适用于需要时间跟踪的应用。</p><p>RTC 类位于 <code>machine</code> 模块下。</p><h3 id="2-1-构造函数">2.1 构造函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rtc = RTC()</span><br></pre></td></tr></table></figure><h3 id="2-2-init方法">2.2 init方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rtc.init(year, mon, day, hour, <span class="built_in">min</span>, sec, microsec)</span><br></pre></td></tr></table></figure><h4 id="2-2-1-参数-2">2.2.1 参数</h4><ul><li><code>year</code>: 年</li><li><code>mon</code>: 月</li><li><code>day</code>: 日</li><li><code>hour</code>: 时</li><li><code>min</code>: 分</li><li><code>sec</code>: 秒</li><li><code>microsec</code>: 微秒</li></ul><h3 id="2-2-datetime方法">2.2 datetime方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(rtc.datetime())</span><br></pre></td></tr></table></figure><h4 id="2-2-1-返回值">2.2.1 返回值</h4><p>返回当前日期和时间信息，包括：</p><ul><li><code>year</code>: 年</li><li><code>mon</code>: 月</li><li><code>day</code>: 日</li><li><code>hour</code>: 时</li><li><code>min</code>: 分</li><li><code>sec</code>: 秒</li><li><code>microsec</code>: 微秒</li></ul><h2 id="3-RTC基础使用示例">3. RTC基础使用示例</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h1>第七章 TIM定时器</h1><h2 id="1-TIM基础配置">1. TIM基础配置</h2><p>K230 内部集成了 6 个 Timer 硬件模块，最小定时周期为 1 毫秒（ms）。</p><p>Timer 类位于 <code>machine</code> 模块中。</p><h3 id="1-1-构造函数">1.1 构造函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timer = Timer(index, mode=Timer.PERIODIC, freq=-<span class="number">1</span>, period=-<span class="number">1</span>, callback=<span class="literal">None</span>, arg=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><h4 id="1-1-1-参数">1.1.1 参数</h4><ul><li><code>index</code>: 定时器模块编号，取值范围为 <code>[-1, 5]</code>。<ul><li><code>-1</code> 表示软件定时器。</li><li><code>0~5</code> 为硬件定时器编号，【但当前不可用】。</li></ul></li><li><code>mode</code>: 定时器运行模式，可选 <code>Timer.ONE_SHOT</code> 或 <code>Timer.PERIODIC</code>。<ul><li><code>ONE_SHOT</code>：定时器在触发一次回调后自动停止。</li><li><code>PERIODIC</code>：定时器在触发回调后会自动重置周期，持续周期性触发。</li></ul></li><li><code>freq</code>: 定时器频率（Hz），可以为浮点数。如果设置了 <code>freq</code>，则定时器的时间间隔由频率决定，<code>freq</code> 优先级高于 <code>period</code>。例如，<code>freq=1</code> 相当于 <code>period=1000ms</code>。</li><li><code>period</code>: 定时器周期，单位为毫秒（ms），如果未设置 <code>freq</code>，则以 <code>period</code> 为准。</li><li><code>callback</code>: 超时回调函数。当定时器计数完成后自动调用该函数，函数至少应包含一个参数（接收定时器自身对象或关联参数）。</li><li><code>arg</code>: 超时回调函数的参数（可选）。如果提供了 <code>arg</code>，在回调函数中将可以通过传入的参数获取额外信息。</li></ul><p><strong>注意：</strong> <strong>硬件定时器 [0-5] 暂不可用。</strong></p><h3 id="1-2-init方法">1.2 init方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Timer.init(mode=Timer.PERIODIC, freq=-<span class="number">1</span>, period=-<span class="number">1</span>, callback=<span class="literal">None</span>, arg=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>用于初始化或重新配置定时器的参数。参数与构造函数相同。</p><h3 id="1-3-deinit方法">1.3 deinit方法</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Timer.deinit()</span><br></pre></td></tr></table></figure><h2 id="2-TIM基础使用示例">2. TIM基础使用示例</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> FPIOA, Pin, Timer</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">RGB = FPIOA()</span><br><span class="line">RGB.set_function(<span class="number">62</span>, FPIOA.GPIO62)</span><br><span class="line">RGB.set_function(<span class="number">20</span>, FPIOA.GPIO20)</span><br><span class="line">RGB.set_function(<span class="number">63</span>, FPIOA.GPIO63)</span><br><span class="line">R = Pin(<span class="number">62</span>, Pin.OUT, pull=Pin.PULL_NONE, drive=<span class="number">15</span>)</span><br><span class="line">G = Pin(<span class="number">20</span>, Pin.OUT, pull=Pin.PULL_NONE, drive=<span class="number">15</span>)</span><br><span class="line">B = Pin(<span class="number">63</span>, Pin.OUT, pull=Pin.PULL_NONE, drive=<span class="number">15</span>)</span><br><span class="line">R.high()</span><br><span class="line">G.high()</span><br><span class="line">B.high()</span><br><span class="line"><span class="comment"># 颜色状态</span></span><br><span class="line">color_state = <span class="number">0</span>  <span class="comment"># 0红1绿2蓝</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 中断回调函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">led_toggle</span>(<span class="params">timer</span>):</span><br><span class="line">    <span class="keyword">global</span> color_state</span><br><span class="line">    R.high()</span><br><span class="line">    G.high()</span><br><span class="line">    B.high()</span><br><span class="line">    <span class="keyword">if</span> color_state == <span class="number">0</span>:</span><br><span class="line">        R.low()</span><br><span class="line">    <span class="keyword">elif</span> color_state == <span class="number">1</span>:</span><br><span class="line">        G.low()</span><br><span class="line">    <span class="keyword">elif</span> color_state == <span class="number">2</span>:</span><br><span class="line">        B.low()</span><br><span class="line"></span><br><span class="line">    color_state = (color_state + <span class="number">1</span>) % <span class="number">3</span>  <span class="comment"># 切换颜色</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建软件定时器-1</span></span><br><span class="line">tim = Timer(-<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 初始化定时器，每隔500ms调用一次回调函数</span></span><br><span class="line">tim.init(period=<span class="number">500</span>, mode=Timer.PERIODIC, callback=led_toggle)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过在IDE中运行上面的代码，我们可以直观地看到定时器带来的异步定时执行效果：即使主循环在空转（什么都不做），RGB LED 依然会按照定时器设定的周期不断轮换颜色。</p><h1>第八章 WDT看门狗</h1><h2 id="1-看门狗的工作原理">1. 看门狗的工作原理</h2><ol><li><strong>初始化看门狗：</strong> 系统启动后，首先初始化看门狗定时器，并设置一个超时时间（喂狗时间）。</li><li><strong>定时复位看门狗：</strong> 在正常运行中，系统需要定期向看门狗发送信号（称为“喂狗”），重置看门狗的计时器。</li><li><strong>触发复位：</strong> 如果系统未能及时“喂狗”，看门狗计时器超时会触发硬件复位操作，将系统恢复到初始状态。</li></ol><h2 id="2-看门狗基础配置">2. 看门狗基础配置</h2><p>K230 内部包含两个 WDT（看门狗定时器）硬件模块，主要用于在应用程序崩溃或进入不可恢复状态时重启系统。一旦启动 WDT，如果在设定的超时时间内没有进行“喂狗”操作，系统将自动复位。</p><p>WDT 类位于 <code>machine</code> 模块中。</p><h3 id="2-1-构造函数-2">2.1 构造函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wdt = WDT(<span class="built_in">id</span>=<span class="number">1</span>, timeout=<span class="number">5</span>)</span><br></pre></td></tr></table></figure><h4 id="2-1-1-参数">2.1.1 参数</h4><ul><li><code>id</code>: WDT 模块编号，取值范围为 [0, 1]，默认为 1。</li><li><code>timeout</code>: 超时值，单位为秒（s），默认为 5。</li></ul><p><strong>注意：</strong> WDT0 暂不可用。</p><h3 id="2-2-feed方法">2.2 feed方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WDT.feed()</span><br></pre></td></tr></table></figure><p>执行喂狗操作。</p><h2 id="3-看门狗使用举例">3. 看门狗使用举例</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> FPIOA, Pin, WDT</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">gpio = FPIOA()</span><br><span class="line">gpio.set_function(<span class="number">62</span>, FPIOA.GPIO62)</span><br><span class="line">gpio.set_function(<span class="number">20</span>, FPIOA.GPIO20)</span><br><span class="line">gpio.set_function(<span class="number">63</span>, FPIOA.GPIO63)</span><br><span class="line">gpio.set_function(<span class="number">53</span>, FPIOA.GPIO53)</span><br><span class="line">R = Pin(<span class="number">62</span>, Pin.OUT, pull=Pin.PULL_NONE, drive=<span class="number">15</span>)</span><br><span class="line">G = Pin(<span class="number">20</span>, Pin.OUT, pull=Pin.PULL_NONE, drive=<span class="number">15</span>)</span><br><span class="line">B = Pin(<span class="number">63</span>, Pin.OUT, pull=Pin.PULL_NONE, drive=<span class="number">15</span>)</span><br><span class="line">key = Pin(<span class="number">53</span>, Pin.IN, Pin.PULL_DOWN)</span><br><span class="line">R.high()</span><br><span class="line">G.high()</span><br><span class="line">B.high()</span><br><span class="line">color_state = <span class="number">0</span> <span class="comment"># 颜色状态</span></span><br><span class="line"><span class="comment"># 初始化看门狗，通道1，喂狗时间10s</span></span><br><span class="line">wwdg = WDT(<span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line">wwdg.feed() <span class="comment"># 先喂狗</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    R.high()</span><br><span class="line">    G.high()</span><br><span class="line">    B.high()</span><br><span class="line">    <span class="keyword">if</span> color_state == <span class="number">0</span>:</span><br><span class="line">        R.low()</span><br><span class="line">    <span class="keyword">elif</span> color_state == <span class="number">1</span>:</span><br><span class="line">        G.low()</span><br><span class="line">    <span class="keyword">elif</span> color_state == <span class="number">2</span>:</span><br><span class="line">        B.low()</span><br><span class="line"></span><br><span class="line">    color_state = (color_state + <span class="number">1</span>) % <span class="number">3</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> key.value() == <span class="number">1</span>:</span><br><span class="line">        wwdg.feed() <span class="comment"># 进行喂狗</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;已经成功喂狗啦&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">0.2</span>)</span><br><span class="line"></span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p>看门狗（WDT）的主要作用是就是<strong>监控系统是否正常运行</strong>，并在系统出现异常时触发复位，上面例程并不是真实的使用场景，大家根据自己的时间项目自由设置。</p>]]></content>
    
    
    <summary type="html">包括学习立创庐山派的一些笔记（其实就是cv，主要是加深印象）。</summary>
    
    
    
    <category term="视觉" scheme="https://choas8.github.io/categories/%E8%A7%86%E8%A7%89/"/>
    
    
    <category term="pwm" scheme="https://choas8.github.io/tags/pwm/"/>
    
    <category term="uart" scheme="https://choas8.github.io/tags/uart/"/>
    
    <category term="adc" scheme="https://choas8.github.io/tags/adc/"/>
    
    <category term="rtc" scheme="https://choas8.github.io/tags/rtc/"/>
    
    <category term="tim" scheme="https://choas8.github.io/tags/tim/"/>
    
    <category term="wdt" scheme="https://choas8.github.io/tags/wdt/"/>
    
  </entry>
  
  <entry>
    <title>电赛准备阶段</title>
    <link href="https://choas8.github.io/posts/e24af28e.html"/>
    <id>https://choas8.github.io/posts/e24af28e.html</id>
    <published>2025-03-15T03:07:35.000Z</published>
    <updated>2025-03-15T15:31:43.832Z</updated>
    
    <content type="html"><![CDATA[<h1>电子设计大赛准备阶段内容</h1><h2 id="电路方面">电路方面</h2><h3 id="1-1-基本电路知识">1.1 基本电路知识</h3><ol><li><p><strong>常见的电路基本元件的掌握</strong></p><ul><li>电阻、电容、电感、二极管</li><li>各类三极管、MOS管、光耦、可调电阻</li><li>运算放大器</li><li>熟练掌握它们的功能，相关量的计算公式</li><li>尤其是三极管，要重点学习</li></ul></li><li><p><strong>常见的电路组合件的使用</strong></p><ul><li>桥式电路、半桥电路</li><li>整流电路、变压电路、逆变电路</li><li>BUCK电路、BOOST电路</li><li>三相电路、功率放大电路等</li><li>掌握具体功能、使用原理及各种变式，做到实际场景中熟练使用</li></ul></li><li><p><strong>以三极管为核心的理论知识</strong></p><ul><li>模电一定认真学</li><li>三极管的各种计算公式</li><li>各类放大电路（共射放大电路、共极放大电路、斩波电路）</li><li>MOS管的各种公式、计算、使用</li></ul></li><li><p><strong>复合电路的制作与应用</strong></p><ul><li>各种元器件组成的加法器、减法器、乘法器、除法器</li><li>指数器、coms、ttl反相器、对数器等</li><li>掌握电路的制作、原理和使用</li></ul></li></ol><h3 id="1-2-基本模块，仪器使用">1.2 基本模块，仪器使用</h3><ol><li><p><strong>电学模块</strong></p><ul><li>继电器模块、升降压模块</li><li>数字电位器、电容开关</li><li>电磁铁、直流推杆等</li><li>熟练掌握基本原理和使用方法</li></ul></li><li><p><strong>仪器使用</strong></p><ul><li>示波器、信号（函数）发生器</li><li>电流源、万用表等</li><li>熟练使用这些仪器</li></ul></li></ol><h3 id="1-3-实操技术">1.3 实操技术</h3><ol><li><p><strong>面包板的熟练使用</strong></p><ul><li>最基础的技能</li></ul></li><li><p><strong>焊电路板</strong></p><ul><li>一定要熟练</li></ul></li><li><p><strong>仿真软件的使用</strong></p><ul><li>Multisim、Proteus等仿真软件</li><li>用来在正式焊板子之前跑一下模拟和仿真，验证电路的正确性</li></ul></li></ol><h3 id="1-4-阶段测试内容">1.4 阶段测试内容</h3><p><strong>如果可以独立完成以下的题目，不参考其他资料，则证明板块学习通过。</strong></p><ol><li><p>设计一电路，可以将一个峰峰值为20mv的正弦波放大为峰峰值为1v以上的正弦波，且无明显噪声。而后将正弦波转为馒头波，即正弦波取绝对值。（只允许使用三极管，二极管，电阻）</p></li><li><p>设计一电路，输入为3v的正弦波，经过处理可以分别输出以下波形：</p><p><img src="https://tuchuang.org.cn/imgs/2025/03/15/8559e253a674d3d7.png" alt=""></p></li><li><p>设计一功率放大电路，可使一个最大输出3v，0.5A的音频输出口，可搭载功率至少3v，2.5A的喇叭。</p></li></ol><p>进阶：</p><p>一个358双输入双输出，输入a波和b波，波形自定，输出结果为a+b，a-b。</p><p>想个办法，输入a，输出lna</p><h2 id="MCU方面">MCU方面</h2><h3 id="2-1-STM32系列">2.1 STM32系列</h3><p><strong>STM32F407单片机（以下简称单片机）的基本控制原理，基本知识的掌握，基本的编程能力掌握，要求去掌握一下能力点：</strong></p><ol><li>可使用单片机的任意电平输出引脚抬高或抬低电平，达到控制继电器的目的。（这个贼简单）</li><li>单片机与串口屏的互联，单片机可以接收串口屏的信息，也可发送数据到串口屏上进行显示。</li><li>可使用单片机控制步进电机的前进，后退，速度，停止，普通电机的转速，前进后退。舵机的运动角度，旋转速度。这里面主要要使用PWM波的控制和代码编程。</li><li>单片机的ADC转换，DAC转换的熟练使用。</li><li>单片机串口通信的使用（这个最重要）。可以接收不同模块的的数据，也可向不同模块发送数据，可以使用多个串口进行数据的收发。</li><li>熟练掌握单片机与蓝牙模块，wifi模块的使用。蓝牙通信，wifi通信的使用。</li><li>单片机接收红外遥控模块信号，通过红外模块发送信号，使用wifi或蓝牙与手机App通信，收发数据。</li><li>单片机与其他各种传感器，各种模块的通信，这个一定要熟练。</li></ol><h3 id="2-2-阶段测试内容">2.2 阶段测试内容</h3><ol><li><p>使用串口屏，连接单片机，串口屏设置abcd四个按键，分别控制ABCD四个led灯，其中c灯由8个led灯组组成。要求按下a按钮，A灯可以亮一秒，灭一秒循环；按下b按钮，B灯可以先逐渐变暗再逐渐变量，2秒为一个周期；按下c按钮，8个灯珠可以形成跑马灯效果。按下d按钮，复位。上述步骤可重复</p></li><li><p>（模拟空间站外的机械手臂）使用串口屏控制云台 ，云台上要求有四个不同方向舵机，其中一个舵机连接一个机械抓手。串口屏上有若干个按钮，要求分别控制三个舵机在不同维度进行旋转，并设置有三个速度模式（三个速度档位）。抓手可根据指令进行缩放。</p></li><li><p>（模拟房间温湿度检测）单片机分别连接温湿度检测模块传，超声测距传感器，电机（模拟风扇），舵机（模拟自动升降窗帘），当检测到房间温度超标自动打开电机，回到正常范围关闭电机，湿度超标打开舵机，回到正常范围关闭舵机。当超声测距传感器检测到房间有人来，所有电器关闭。温湿度传感器可以实时将检测值显示到串口屏和手机App上。</p></li><li><p>（很重要）使用单片机上的ADC模块，将信号源上输出的峰峰值为3.3v的正弦交流电接收，并实时显示在串口屏上，串口屏上可以显示当前波形的峰峰值，周期，电流。</p></li></ol><h2 id="Jetson-嵌入式主板方面">Jetson 嵌入式主板方面</h2><p>Jetson主要是做视觉识别方面的工作，主要学习点如下：</p><ol><li><p>使用Python，熟练掌握opencv的各种函数的功能，主要包括色块识别，运动检测识别，人脸识别（五官的分别识别），性别识别，二维码识别，手势识别，数字识别，文字识别，语音识别等等等等识别。</p></li><li><p>完成单片机与Jetson的串口通信，单片机与Jetson直接可互发数字，字符等。</p></li><li><p>Jetson与网络交换机直接的配合合作，可实现多个Jetson通过网络交换机进行数据互访，视频互传。</p></li><li><p>Jetson端口界面的控制端口界面的制作。GUI界面的制作（可选）</p></li><li><p>Jetson与单片机通过蓝牙模块，wifi模块进行数据的相互收发。</p></li><li><p>利用Jetson配合交换机，使两个usb摄像头通过交换机实时向Jetson上传实时视频。并设计端口界面展示</p></li><li><p>Jetson机器学习功能的实现</p></li></ol><h3 id="阶段测试内容">阶段测试内容</h3><ol><li><p>使用Jetson板子连接单片机，Jetson板子通过相机，检测人脸是否戴有口罩，并将信号发送到单片机，单片机控制声光模块，并将佩戴情况通过声光模块进行显示和提示。</p></li><li><p>使用Jetson板子连接单片机，Jetson板子识别色块，将信号传至单片机，单片机控制之前说到的云台进行控制，可实现色块的识别与跟踪，最好可以通过控制云台将色块抓起来放在指定位置</p></li></ol><p><strong>首先介绍一下电赛的基本信息：</strong></p><p>国家级的电赛每两年一次，省级的电赛也是每两年一次，即奇数年为全国比赛，偶数年为各个省级比赛。赛制基本相同，出题方式也基本相同。可以认为，省级比赛是为国家级比赛做做热身做做准备。</p><p>重点说全国比赛：</p><p>每年8月初左右正式开始比赛，比赛时间基本为四天三夜，这是相当煎熬的四天三夜。他会把你脑海中所有能用到的知识都拿出来翻一遍。也许这四天三夜，你的睡眠时间可能都小于15小时。</p><p>以2019年比赛举例，8月4号到7号比赛，而后所有参赛队统一到一个大学进行初测。裁判会根据你的作品任务完成度进行打分。然后你的作品封箱留下，你回去等消息。</p><p>一般比完赛后的一周左右时间，各省会公布省级复测名单，进入复测名单，基本上说明你省一或省二大差不差了，只要你很好的完成任务，并且在复测的时候不炸，就是省一；如果出了比较严重的问题，那就是省二了。（当然，各个省的制度有点不一样，但是大多数都是这样）</p><p>复测期间，还有一个被称为“关小黑屋”的综合测评。就是参赛队三个人被带进一个小黑屋，限时完成一道题目的制作，一般都是以模电，数电为基础，编程技术和设计功底为导向的测评。讲白了目的就是看这个东西是不是你做出来的。你要是作品很厉害，但是综合测评很差，那就只能让你出门左转了。（2021年电赛因为疫情，取消了综合测评。哼！）</p><p>而后就是各省把复测和综合测评排名靠前的推荐到全国大赛组委会作为国家奖推荐队。如果你成功入选国家将推荐队，说明你基本上国二稳了（电赛没有国三）。如果你还入选了国家级复测名单，说明你只要不出问题，国一基本稳了。中间还会有复测和综合测评，规则和省级测评差不多。只不过要集中到一个主办大学。一般获得国奖的不超过全国实际参赛队数量的8%，国一和国二一般是三七开。最高荣誉是TI杯（名称会随着主办单位变化而变化），每年本科组和高职组各一个。省级奖一般不超过各省实际参赛队的三分之一。</p><p><strong>重点来了！！！准备阶段应该学点啥呢！！！</strong></p><p>我个人认为，与其说你去刻意的学C语言，学python，学Multisim，这些工具，不如你自己日常多去主动的做一做一些小项目，多动动手去用起来。当然这些工具的学习也是必要的。但是要注意的一点，电赛考验的是知识的综合应用能力和动手能力。</p><p>一般来说电子设计大赛常用的控制机分为几大派别：</p><ol><li>STM32系列板子做控制器，STM32可谓是太经典太好用了，他的资源特别多，使用的人数也基本上是最多的。可以说每道题都可以用。当然不同型号的板子也有相应的优缺点，这里大家可以多去了解了解。但不可否认，我觉得，STM32系列板子的学习与应用，是电赛训练必不可少的！！！！！</li><li>树莓派板子。涉及到一些深度学习，机器学习，视觉，识别类的题目可以用用。也是不错的，资源也很多</li><li>51单片机，个人建议，还在死磕51单片机的小伙伴，赶紧转为STM32！！！</li><li>Arduino系列的小可爱。资源很多，但是可用的范围太小了。个人觉得，这个给小学初中生作为编程的训练，作为大学生单片机开发的入门学习内容还行。真要说做实打实的项目，实战的时候用。。。还是够呛。但是不可否认，Arduino做小车子的控制，还是很不错的哦。</li><li>Jetson系列的高段位板子。一般英伟达的Jetson做视觉方面，识别方面的是有先天优势的。板子带显卡，内存大，使用Python编程。我个人就很倾向于用它和STM32板子配合。</li></ol><p>你有了一个良好的平台只是开始，而后就是各方面需要掌握的知识了</p><ol><li>电学方面：良好的模电，数电以及电路基本常识是绝对必不可少的！！！这就要求你在上这方面专业课的时候要认真学习，踏实学习，最好能多多应用到实践当中。</li><li>控制方面：对各种各样的传感器，对各类传感器的数据传输形式具体原理，各种电子元器件的具体工作原理你要做到如数家珍，十分熟悉才行。别到上场的时候，连继电器怎么连都不知道。</li><li>选用好一个控制器后，一定要对它的编程，它的程序撰写无比熟悉才行。除了各种功能代码的实现，更重要的是，你要十分熟悉控制器与其他电子元件，其他各类传感器或者被控对象的控制。基本原理一定要掌握。</li></ol><p><strong>以STM32系列单片机为例</strong></p><p>常见的你需要掌握的有：</p><ol><li>STM32板子上各个串口的调用，串口的数据的发送与接收（这个一定要熟练）</li><li>板子上电平的抬高抬低，PWM波的输出与动态控制，中断的调用，等等等等，乃至PID</li><li>板子上的各类ADC,DAC转换的使用，这个相当重要，太重要了</li><li>板子对各类传感器的使用，各种模块，如步进电机，舵机，整体云台的控制等等，当然不是要求你用板子带动他们能动就行，你要到，比如，自己编程序，一个三维云台，可以跟踪一个物体的移动相应的定位移动。</li></ol><p><strong>如果你是做小车题：</strong></p><p>那么一般选好板子后，选好车型，用什么样的车合适？履带？两驱？四驱？差速转向？舵机转向？等等等，因为要视比赛情况而定，所以前期训练一定要准备好。超声波测距模块，红外模块，甚至雷达模块，云台，摄像头，电机控制，你要无比熟悉才行。而后，小车的寻迹，避障，路径规划，范围运动等等等等功能，也要足够熟悉。进而是对小车运动的各项参数的调整，让小车的运动更为合理。</p><p><strong>如果你是做电源题或者信号题，那就不用说了，模电！！！模电！！！模电！！！，数电！！！数电！！！数电！！！</strong></p>]]></content>
    
    
    <summary type="html">包括对电赛的准备。(转载自知乎Tristan Wang)</summary>
    
    
    
    <category term="电赛" scheme="https://choas8.github.io/categories/%E7%94%B5%E8%B5%9B/"/>
    
    
    <category term="电路" scheme="https://choas8.github.io/tags/%E7%94%B5%E8%B7%AF/"/>
    
    <category term="mcu" scheme="https://choas8.github.io/tags/mcu/"/>
    
  </entry>
  
  <entry>
    <title>k230学习笔记-GPIO与FPIOA</title>
    <link href="https://choas8.github.io/posts/a692fc3.html"/>
    <id>https://choas8.github.io/posts/a692fc3.html</id>
    <published>2025-03-09T08:24:14.000Z</published>
    <updated>2025-03-15T09:58:34.058Z</updated>
    
    <content type="html"><![CDATA[<h1>第二章 GPIO与FPIOA</h1><h2 id="1-导入">1. 导入</h2><ol><li>GPIO就是我们常说的IO引脚，它直接从芯片上引出，可以被设置为输入或输出信号。没有额外功能的GPIO主要用来控制简单的设备，比如点亮LED灯或者读取按键的状态。</li><li>FPIOA是一种灵活的输入输出阵列，允许芯片对IO功能进行重新配置，类似用STM32上的复用引脚，也就是说不同的引脚可以根据需求重新定义。</li><li>iomux就是引脚复用了，主要是配置物理PAD(管脚)的功能，由于soc功能多管脚(pads)少，多个功能共享同一个I/O管脚(pads),但是一个pads同一时间只能使用其中一个功能,所以需要IOMUX进行功能选择。IOMUX也叫FPIOA，Pin multiplexing，管脚功能选择等，在K230中，FPIOA就是iomux。</li><li>我们使用 MicroPython 语法来控制K230的引脚，<code>machine.Pin</code> 模块用于控制微控制器的 GPIO 引脚。<code>Pin</code> 类提供了访问和控制硬件引脚的功能，主要包括配置引脚模式，读写引脚状态等</li></ol><h2 id="2-各引脚的复用功能">2. 各引脚的复用功能</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> FPIOA</span><br><span class="line">IO = FPIOA()</span><br><span class="line">IO.<span class="built_in">help</span>()</span><br></pre></td></tr></table></figure><table><thead><tr><th>pin</th><th>cur func</th><th>can be func</th></tr></thead><tbody><tr><td>0</td><td>GPIO0</td><td>GPIO0/BOOT0/RESV/</td></tr><tr><td>1</td><td>GPIO1</td><td>GPIO1/BOOT1/RESV/</td></tr><tr><td>2</td><td>JTAG_TCK</td><td>GPIO2/JTAG_TCK/PULSE_CNTR0/RESV/</td></tr><tr><td>3</td><td>JTAG_TDI</td><td>GPIO3/JTAG_TDI/PULSE_CNTR1/UART1_TXD/RESV/</td></tr><tr><td>4</td><td>JTAG_TDO</td><td>GPIO4/JTAG_TDO/PULSE_CNTR2/UART1_RXD/RESV/</td></tr><tr><td>5</td><td>UART2_TXD</td><td>GPIO5/JTAG_TMS/PULSE_CNTR3/UART2_TXD/RESV/</td></tr><tr><td>6</td><td>UART2_RXD</td><td>GPIO6/JTAG_RST/PULSE_CNTR4/UART2_RXD/RESV/</td></tr><tr><td>7</td><td>PWM2</td><td>GPIO7/PWM2/IIC4_SCL/RESV/RESV/</td></tr><tr><td>8</td><td>PWM3</td><td>GPIO8/PWM3/IIC4_SDA/RESV/RESV/</td></tr><tr><td>9</td><td>PWM4</td><td>GPIO9/PWM4/UART1_TXD/IIC1_SCL/RESV/</td></tr><tr><td>10</td><td>CTRL_IN_3D</td><td>GPIO10/CTRL_IN_3D/UART1_RXD/IIC1_SDA/RESV/</td></tr><tr><td>11</td><td>CTRL_O1_3D</td><td>GPIO11/CTRL_O1_3D/UART2_TXD/IIC2_SCL/RESV/</td></tr><tr><td>12</td><td>CTRL_O2_3D</td><td>GPIO12/CTRL_O2_3D/UART2_RXD/IIC2_SDA/RESV/</td></tr><tr><td>13</td><td>M_CLK1</td><td>GPIO13/M_CLK1/RESV/</td></tr><tr><td>14</td><td>OSPI_CS</td><td>GPIO14/OSPI_CS/RESV/QSPI0_CS0/RESV/</td></tr><tr><td>15</td><td>OSPI_CLK</td><td>GPIO15/OSPI_CLK/RESV/QSPI0_CLK/RESV/</td></tr><tr><td>16</td><td>OSPI_D0</td><td>GPIO16/OSPI_D0/QSPI1_CS4/QSPI0_D0/RESV/</td></tr><tr><td>17</td><td>OSPI_D1</td><td>GPIO17/OSPI_D1/QSPI1_CS3/QSPI0_D1/RESV/</td></tr><tr><td>18</td><td>OSPI_D2</td><td>GPIO18/OSPI_D2/QSPI1_CS2/QSPI0_D2/RESV/</td></tr><tr><td>19</td><td>OSPI_D3</td><td>GPIO19/OSPI_D3/QSPI1_CS1/QSPI0_D3/RESV/</td></tr><tr><td>20</td><td>GPIO20</td><td>GPIO20/OSPI_D4/QSPI1_CS0/PULSE_CNTR0/RESV/</td></tr><tr><td>21</td><td>OSPI_D5</td><td>GPIO21/OSPI_D5/QSPI1_CLK/PULSE_CNTR1/RESV/</td></tr><tr><td>22</td><td>OSPI_D6</td><td>GPIO22/OSPI_D6/QSPI1_D0/PULSE_CNTR2/RESV/</td></tr><tr><td>23</td><td>GPIO23</td><td>GPIO23/OSPI_D7/QSPI1_D1/PULSE_CNTR3/RESV/</td></tr><tr><td>24</td><td>GPIO24</td><td>GPIO24/OSPI_DQS/QSPI1_D2/PULSE_CNTR4/RESV/</td></tr><tr><td>25</td><td>GPIO25</td><td>GPIO25/PWM5/QSPI1_D3/PULSE_CNTR5/RESV/</td></tr><tr><td>26</td><td>PDM_CLK</td><td>GPIO26/MMC1_CLK/RESV/PDM_CLK/</td></tr><tr><td>27</td><td>GPIO27</td><td>GPIO27/MMC1_CMD/PULSE_CNTR5/PDM_IN0/RESV/</td></tr><tr><td>28</td><td>GPIO28</td><td>GPIO28/MMC1_D0/UART3_TXD/PDM_IN1/RESV/</td></tr><tr><td>29</td><td>GPIO29</td><td>GPIO29/MMC1_D1/UART3_RXD/CTRL_IN_3D/RESV/</td></tr><tr><td>30</td><td>GPIO30</td><td>GPIO30/MMC1_D2/UART3_RTS/CTRL_O1_3D/RESV/</td></tr><tr><td>31</td><td>GPIO31</td><td>GPIO31/MMC1_D3/UART3_CTS/CTRL_O2_3D/RESV/</td></tr><tr><td>32</td><td>IIS_CLK</td><td>GPIO32/IIC0_SCL/IIS_CLK/UART3_TXD/RESV/</td></tr><tr><td>33</td><td>IIS_WS</td><td>GPIO33/IIC0_SDA/IIS_WS/UART3_RXD/RESV/</td></tr><tr><td>34</td><td>IIS_D_IN0</td><td>GPIO34/IIC1_SCL/IIS_D_IN0/PDM_IN3/UART3_RTS/</td></tr><tr><td>35</td><td>IIS_D_OUT0</td><td>GPIO35/IIC1_SDA/IIS_D_OUT0/PDM_IN1/UART3_CTS/</td></tr><tr><td>36</td><td>GPIO36</td><td>GPIO36/IIC3_SCL/IIS_D_IN1/PDM_IN2/UART4_TXD/</td></tr><tr><td>37</td><td>GPIO37</td><td>GPIO37/IIC3_SDA/IIS_D_OUT1/PDM_IN0/UART4_RXD/</td></tr><tr><td>38</td><td>UART0_TXD</td><td>GPIO38/UART0_TXD/RESV/QSPI1_CS0/HSYNC0/</td></tr><tr><td>39</td><td>UART0_RXD</td><td>GPIO39/UART0_RXD/RESV/QSPI1_CLK/VSYNC0/</td></tr><tr><td>40</td><td>IIC1_SCL</td><td>GPIO40/UART1_TXD/IIC1_SCL/QSPI1_D0/RESV/</td></tr><tr><td>41</td><td>IIC1_SDA</td><td>GPIO41/UART1_RXD/IIC1_SDA/QSPI1_D1/RESV/</td></tr><tr><td>42</td><td>GPIO42</td><td>GPIO42/UART1_RTS/PWM0/QSPI1_D2/RESV/</td></tr><tr><td>43</td><td>GPIO43</td><td>GPIO43/UART1_CTS/PWM1/QSPI1_D3/RESV/</td></tr><tr><td>44</td><td>IIC3_SCL</td><td>GPIO44/UART2_TXD/IIC3_SCL/RESV/SPI2AXI_CK/</td></tr><tr><td>45</td><td>IIC3_SDA</td><td>GPIO45/UART2_RXD/IIC3_SDA/RESV/SPI2AXI_CS/</td></tr><tr><td>46</td><td>IIC4_SCL</td><td>GPIO46/UART2_RTS/PWM2/IIC4_SCL/RESV/</td></tr><tr><td>47</td><td>IIC4_SDA</td><td>GPIO47/UART2_CTS/PWM3/IIC4_SDA/RESV/</td></tr><tr><td>48</td><td>IIC0_SCL</td><td>GPIO48/UART4_TXD/RESV/IIC0_SCL/SPI2AXI_DI/</td></tr><tr><td>49</td><td>IIC0_SDA</td><td>GPIO49/UART4_RXD/RESV/IIC0_SDA/SPI2AXI_DO/</td></tr><tr><td>50</td><td>UART3_TXD</td><td>GPIO50/UART3_TXD/IIC2_SCL/QSPI0_CS4/RESV/</td></tr><tr><td>51</td><td>UART3_RXD</td><td>GPIO51/UART3_RXD/IIC2_SDA/QSPI0_CS3/RESV/</td></tr><tr><td>52</td><td>GPIO52</td><td>GPIO52/UART3_RTS/PWM4/IIC3_SCL/RESV/</td></tr><tr><td>53</td><td>GPIO53</td><td>GPIO53/UART3_CTS/PWM5/IIC3_SDA/</td></tr><tr><td>54</td><td>MMC1_CMD</td><td>GPIO54/QSPI0_CS0/MMC1_CMD/PWM0/RESV/</td></tr><tr><td>55</td><td>MMC1_CLK</td><td>GPIO55/QSPI0_CLK/MMC1_CLK/PWM1/RESV/</td></tr><tr><td>56</td><td>MMC1_D0</td><td>GPIO56/QSPI0_D0/MMC1_D0/PWM2/RESV/</td></tr><tr><td>57</td><td>MMC1_D1</td><td>GPIO57/QSPI0_D1/MMC1_D1/PWM3/RESV/</td></tr><tr><td>58</td><td>MMC1_D2</td><td>GPIO58/QSPI0_D2/MMC1_D2/PWM4/RESV/</td></tr><tr><td>59</td><td>MMC1_D3</td><td>GPIO59/QSPI0_D3/MMC1_D3/PWM5/</td></tr><tr><td>60</td><td>GPIO60</td><td>GPIO60/PWM0/IIC0_SCL/QSPI0_CS2/HSYNC1/</td></tr><tr><td>61</td><td>GPIO61</td><td>GPIO61/PWM1/IIC0_SDA/QSPI0_CS1/VSYNC1/</td></tr><tr><td>62</td><td>M_CLK2</td><td>GPIO62/M_CLK2/UART3_DE/RESV/</td></tr><tr><td>63</td><td>M_CLK3</td><td>GPIO63/M_CLK3/UART3_RE/RESV/</td></tr></tbody></table><h2 id="3-GPIO基础使用">3. GPIO基础使用</h2><h3 id="3-1-使用FPIOA">3.1 使用FPIOA</h3><p><strong>FPIOA</strong>（灵活外设输入/输出阵列）是 K230 CanMV 系列微处理器提供的功能，允许用户灵活配置引脚来连接不同的外设。通过这个模块，我们可以轻松管理各种硬件接口。<strong>FPIOA</strong> 可以允许用户根据需要，将特定的引脚分配给不同的功能（比如 SPI、I2C、UART 等），每个引脚在同一时刻只能激活一种功能。使用 FPIOA，可以简化引脚管理，提升芯片的灵活性。</p><h4 id="3-1-1-构造函数">3.1.1 构造函数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> FPIOA</span><br><span class="line">test = FPIOA()</span><br></pre></td></tr></table></figure><h4 id="3-1-2-设置引脚">3.1.2 设置引脚</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test.set_function(pin, func, ie=-<span class="number">1</span>, oe=-<span class="number">1</span>, pu=-<span class="number">1</span>, pd=-<span class="number">1</span>, st=-<span class="number">1</span>, sl=-<span class="number">1</span>, ds=-<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h5 id="3-1-2-1-参数：">3.1.2.1 参数：</h5><ul><li><code>pin</code>: 要配置的引脚编号，范围：[0, 63]</li><li><code>func</code>: 要分配给引脚的功能代码<ul><li>普通GPIO：<code>FPIOA.GPIO0</code>，<code>FPIOA.GPIO1</code>，<code>FPIOA.GPIO2</code>等，范围[0，63]</li><li>串口：<code>FPIOA.UART0_TXD</code>，<code>FPIOA.UART0_RXD</code>，<code>FPIOA.UART1_RXD</code>等。</li><li>IIC：<code>FPIOA.IIC0_SCL</code>，<code>FPIOA.IIC0_SDA</code>，<code>FPIOA.IIC1_SCL</code>，<code>FPIOA.IIC1_SDA</code>等。</li><li>PWM： <code>FPIOA.PWM0</code>， <code>FPIOA.PWM1</code>， <code>FPIOA.PWM2</code>等。</li></ul></li></ul><h5 id="3-1-2-2-更多可选参数：">3.1.2.2 更多可选参数：</h5><ul><li><code>ie</code>: 输入使能，<strong>可选参数</strong>(-1为默认值，0为不使能，1为使能)</li><li><code>oe</code>: 输出使能，<strong>可选参数</strong>(-1为默认值，0为不使能，1为使能)</li><li><code>pu</code>: 上拉使能，<strong>可选参数</strong>(-1为默认值，0为不使能，1为使能)</li><li><code>pd</code>: 下拉使能，<strong>可选参数</strong>(-1为默认值，0为不使能，1为使能)</li><li><code>st</code>: st 使能，<strong>可选参数</strong>(-1为默认值，0为不使能，1为使能)<ul><li>输入施密特触发器控制使能，使能后提高信号的干扰抵抗能力和改善信号的完整性，简单来说，施密特触发器是一种具有滞回特性的电子电路，其输出只在输入信号超过设定的正向或负向阈值时改变，提高了对噪声的抗干扰能力。</li></ul></li><li><code>sl</code>: sl 使能，<strong>可选参数</strong>(-1为默认值，0为不使能，1为使能)<ul><li>目前已经不再使用，建议直接设置为-1.</li></ul></li><li><code>ds</code>: 驱动电流能力，<strong>可选参数</strong>(-1为默认值)<ul><li>默认值为<code>7</code>，范围<code>0-15</code>，数值越大IO的驱动能力越强，除了boot 0 1其他引脚都可以设置最大15。</li></ul></li></ul><h4 id="3-1-3-读取引脚">3.1.3 读取引脚</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test.get_pin_func(pin)</span><br><span class="line">test.get_pin_num(func) <span class="comment"># 获取指定功能当前所在的引脚</span></span><br></pre></td></tr></table></figure><h5 id="3-1-3-1-参数：">3.1.3.1 参数：</h5><p><code>pin</code>: 要配置的引脚编号，范围：[0, 63]。</p><h5 id="3-1-3-2-返回值：">3.1.3.2 返回值：</h5><p>返回引脚当前的功能号。</p><h5 id="3-1-3-3-示例">3.1.3.3 示例</h5><p>其运行结果打印出来的数值为<code>64</code>，结合下方表格，可知<code>64</code>代表当前引脚的功能为 <strong>BOOT0</strong></p><table><thead><tr><th>序号</th><th>功能名</th></tr></thead><tbody><tr><td>0</td><td>GPIO0</td></tr><tr><td>1</td><td>GPIO1</td></tr><tr><td>2</td><td>GPIO2</td></tr><tr><td>3</td><td>GPIO3</td></tr><tr><td>4</td><td>GPIO4</td></tr><tr><td>5</td><td>GPIO5</td></tr><tr><td>6</td><td>GPIO6</td></tr><tr><td>7</td><td>GPIO7</td></tr><tr><td>8</td><td>GPIO8</td></tr><tr><td>9</td><td>GPIO9</td></tr><tr><td>10</td><td>GPIO10</td></tr><tr><td>11</td><td>GPIO11</td></tr><tr><td>12</td><td>GPIO12</td></tr><tr><td>13</td><td>GPIO13</td></tr><tr><td>14</td><td>GPIO14</td></tr><tr><td>15</td><td>GPIO15</td></tr><tr><td>16</td><td>GPIO16</td></tr><tr><td>17</td><td>GPIO17</td></tr><tr><td>18</td><td>GPIO18</td></tr><tr><td>19</td><td>GPIO19</td></tr><tr><td>20</td><td>GPIO20</td></tr><tr><td>21</td><td>GPIO21</td></tr><tr><td>22</td><td>GPIO22</td></tr><tr><td>23</td><td>GPIO23</td></tr><tr><td>24</td><td>GPIO24</td></tr><tr><td>25</td><td>GPIO25</td></tr><tr><td>26</td><td>GPIO26</td></tr><tr><td>27</td><td>GPIO27</td></tr><tr><td>28</td><td>GPIO28</td></tr><tr><td>29</td><td>GPIO29</td></tr><tr><td>30</td><td>GPIO30</td></tr><tr><td>31</td><td>GPIO31</td></tr><tr><td>32</td><td>GPIO32</td></tr><tr><td>33</td><td>GPIO33</td></tr><tr><td>34</td><td>GPIO34</td></tr><tr><td>35</td><td>GPIO35</td></tr><tr><td>36</td><td>GPIO36</td></tr><tr><td>37</td><td>GPIO37</td></tr><tr><td>38</td><td>GPIO38</td></tr><tr><td>39</td><td>GPIO39</td></tr><tr><td>40</td><td>GPIO40</td></tr><tr><td>41</td><td>GPIO41</td></tr><tr><td>42</td><td>GPIO42</td></tr><tr><td>43</td><td>GPIO43</td></tr><tr><td>44</td><td>GPIO44</td></tr><tr><td>45</td><td>GPIO45</td></tr><tr><td>46</td><td>GPIO46</td></tr><tr><td>47</td><td>GPIO47</td></tr><tr><td>48</td><td>GPIO48</td></tr><tr><td>49</td><td>GPIO49</td></tr><tr><td>50</td><td>GPIO50</td></tr><tr><td>51</td><td>GPIO51</td></tr><tr><td>52</td><td>GPIO52</td></tr><tr><td>53</td><td>GPIO53</td></tr><tr><td>54</td><td>GPIO54</td></tr><tr><td>55</td><td>GPIO55</td></tr><tr><td>56</td><td>GPIO56</td></tr><tr><td>57</td><td>GPIO57</td></tr><tr><td>58</td><td>GPIO58</td></tr><tr><td>59</td><td>GPIO59</td></tr><tr><td>60</td><td>GPIO60</td></tr><tr><td>61</td><td>GPIO61</td></tr><tr><td>62</td><td>GPIO62</td></tr><tr><td>63</td><td>GPIO63</td></tr><tr><td>64</td><td>BOOT0</td></tr><tr><td>65</td><td>BOOT1</td></tr><tr><td>66</td><td>CI0</td></tr><tr><td>67</td><td>CI1</td></tr><tr><td>68</td><td>CI2</td></tr><tr><td>69</td><td>CI3</td></tr><tr><td>70</td><td>CO0</td></tr><tr><td>71</td><td>CO1</td></tr><tr><td>72</td><td>CO2</td></tr><tr><td>73</td><td>CO3</td></tr><tr><td>74</td><td>DI0</td></tr><tr><td>75</td><td>DI1</td></tr><tr><td>76</td><td>DI2</td></tr><tr><td>77</td><td>DI3</td></tr><tr><td>78</td><td>DO0</td></tr><tr><td>79</td><td>DO1</td></tr><tr><td>80</td><td>DO2</td></tr><tr><td>81</td><td>DO3</td></tr><tr><td>82</td><td>HSYNC0</td></tr><tr><td>83</td><td>HSYNC1</td></tr><tr><td>84</td><td>IIC0_SCL</td></tr><tr><td>85</td><td>IIC0_SDA</td></tr><tr><td>86</td><td>IIC1_SCL</td></tr><tr><td>87</td><td>IIC1_SDA</td></tr><tr><td>88</td><td>IIC2_SCL</td></tr><tr><td>89</td><td>IIC2_SDA</td></tr><tr><td>90</td><td>IIC3_SCL</td></tr><tr><td>91</td><td>IIC3_SDA</td></tr><tr><td>92</td><td>IIC4_SCL</td></tr><tr><td>93</td><td>IIC4_SDA</td></tr><tr><td>94</td><td>IIS_CLK</td></tr><tr><td>95</td><td>IIS_D_IN0_PDM_IN3</td></tr><tr><td>96</td><td>IIS_D_IN1_PDM_IN2</td></tr><tr><td>97</td><td>IIS_D_OUT0_PDM_IN1</td></tr><tr><td>98</td><td>IIS_D_OUT1_PDM_IN0</td></tr><tr><td>99</td><td>IIS_WS</td></tr><tr><td>100</td><td>JTAG_RST</td></tr><tr><td>101</td><td>JTAG_TCK</td></tr><tr><td>102</td><td>JTAG_TDI</td></tr><tr><td>103</td><td>JTAG_TDO</td></tr><tr><td>104</td><td>JTAG_TMS</td></tr><tr><td>105</td><td>M_CLK1</td></tr><tr><td>106</td><td>M_CLK2</td></tr><tr><td>107</td><td>M_CLK3</td></tr><tr><td>108</td><td>MMC1_CLK</td></tr><tr><td>109</td><td>MMC1_CMD</td></tr><tr><td>110</td><td>MMC1_D0</td></tr><tr><td>111</td><td>MMC1_D1</td></tr><tr><td>112</td><td>MMC1_D2</td></tr><tr><td>113</td><td>MMC1_D3</td></tr><tr><td>114</td><td>OSPI_CLK</td></tr><tr><td>115</td><td>OSPI_CS</td></tr><tr><td>116</td><td>OSPI_D0</td></tr><tr><td>117</td><td>OSPI_D1</td></tr><tr><td>118</td><td>OSPI_D2</td></tr><tr><td>119</td><td>OSPI_D3</td></tr><tr><td>120</td><td>OSPI_D4</td></tr><tr><td>121</td><td>OSPI_D5</td></tr><tr><td>122</td><td>OSPI_D6</td></tr><tr><td>123</td><td>OSPI_D7</td></tr><tr><td>124</td><td>OSPI_DQS</td></tr><tr><td>125</td><td>PDM_IN0</td></tr><tr><td>126</td><td>PDM_IN1</td></tr><tr><td>127</td><td>PDM_IN2</td></tr><tr><td>128</td><td>PDM_IN3</td></tr><tr><td>129</td><td>PULSE_CNTR0</td></tr><tr><td>130</td><td>PULSE_CNTR1</td></tr><tr><td>131</td><td>PULSE_CNTR2</td></tr><tr><td>132</td><td>PULSE_CNTR3</td></tr><tr><td>133</td><td>PULSE_CNTR4</td></tr><tr><td>134</td><td>PULSE_CNTR5</td></tr><tr><td>135</td><td>PWM0</td></tr><tr><td>136</td><td>PWM1</td></tr><tr><td>137</td><td>PWM2</td></tr><tr><td>138</td><td>PWM3</td></tr><tr><td>139</td><td>PWM4</td></tr><tr><td>140</td><td>PWM5</td></tr><tr><td>141</td><td>QSPI0_CLK</td></tr><tr><td>142</td><td>QSPI0_CS0</td></tr><tr><td>143</td><td>QSPI0_CS1</td></tr><tr><td>144</td><td>QSPI0_CS2</td></tr><tr><td>145</td><td>QSPI0_CS3</td></tr><tr><td>146</td><td>QSPI0_CS4</td></tr><tr><td>147</td><td>QSPI0_D0</td></tr><tr><td>148</td><td>QSPI0_D1</td></tr><tr><td>149</td><td>QSPI0_D2</td></tr><tr><td>150</td><td>QSPI0_D3</td></tr><tr><td>151</td><td>QSPI1_CLK</td></tr><tr><td>152</td><td>QSPI1_CS0</td></tr><tr><td>153</td><td>QSPI1_CS1</td></tr><tr><td>154</td><td>QSPI1_CS2</td></tr><tr><td>155</td><td>QSPI1_CS3</td></tr><tr><td>156</td><td>QSPI1_CS4</td></tr><tr><td>157</td><td>QSPI1_D0</td></tr><tr><td>158</td><td>QSPI1_D1</td></tr><tr><td>159</td><td>QSPI1_D2</td></tr><tr><td>160</td><td>QSPI1_D3</td></tr><tr><td>161</td><td>SPI2AXI_CK</td></tr><tr><td>162</td><td>SPI2AXI_CS</td></tr><tr><td>163</td><td>SPI2AXI_DI</td></tr><tr><td>164</td><td>SPI2AXI_DO</td></tr><tr><td>165</td><td>UART0_RXD</td></tr><tr><td>166</td><td>UART0_TXD</td></tr><tr><td>167</td><td>UART1_CTS</td></tr><tr><td>168</td><td>UART1_RTS</td></tr><tr><td>169</td><td>UART1_RXD</td></tr><tr><td>170</td><td>UART1_TXD</td></tr><tr><td>171</td><td>UART2_CTS</td></tr><tr><td>172</td><td>UART2_RTS</td></tr><tr><td>173</td><td>UART2_RXD</td></tr><tr><td>174</td><td>UART2_TXD</td></tr><tr><td>175</td><td>UART3_CTS</td></tr><tr><td>176</td><td>UART3_DE</td></tr><tr><td>177</td><td>UART3_RE</td></tr><tr><td>178</td><td>UART3_RTS</td></tr><tr><td>179</td><td>UART3_RXD</td></tr><tr><td>180</td><td>UART3_TXD</td></tr><tr><td>181</td><td>UART4_RXD</td></tr><tr><td>182</td><td>UART4_TXD</td></tr><tr><td>183</td><td>PDM_CLK</td></tr><tr><td>184</td><td>VSYNC0</td></tr><tr><td>185</td><td>VSYNC1</td></tr><tr><td>186</td><td>CTRL_IN_3D</td></tr><tr><td>187</td><td>CTRL_O1_3D</td></tr><tr><td>188</td><td>CTRL_O2_3D</td></tr><tr><td>189</td><td>TEST_PIN0</td></tr><tr><td>190</td><td>TEST_PIN1</td></tr><tr><td>191</td><td>TEST_PIN2</td></tr><tr><td>192</td><td>TEST_PIN3</td></tr><tr><td>193</td><td>TEST_PIN4</td></tr><tr><td>194</td><td>TEST_PIN5</td></tr><tr><td>195</td><td>TEST_PIN6</td></tr><tr><td>196</td><td>TEST_PIN7</td></tr><tr><td>197</td><td>TEST_PIN8</td></tr><tr><td>198</td><td>TEST_PIN9</td></tr><tr><td>199</td><td>TEST_PIN10</td></tr><tr><td>200</td><td>TEST_PIN11</td></tr><tr><td>201</td><td>TEST_PIN12</td></tr><tr><td>202</td><td>TEST_PIN13</td></tr><tr><td>203</td><td>TEST_PIN14</td></tr><tr><td>204</td><td>TEST_PIN15</td></tr><tr><td>205</td><td>TEST_PIN16</td></tr><tr><td>206</td><td>TEST_PIN17</td></tr><tr><td>207</td><td>TEST_PIN18</td></tr><tr><td>208</td><td>TEST_PIN19</td></tr><tr><td>209</td><td>TEST_PIN20</td></tr><tr><td>210</td><td>TEST_PIN21</td></tr><tr><td>211</td><td>TEST_PIN22</td></tr><tr><td>212</td><td>TEST_PIN23</td></tr><tr><td>213</td><td>TEST_PIN24</td></tr><tr><td>214</td><td>TEST_PIN25</td></tr><tr><td>215</td><td>TEST_PIN26</td></tr><tr><td>216</td><td>TEST_PIN27</td></tr><tr><td>217</td><td>TEST_PIN28</td></tr><tr><td>218</td><td>TEST_PIN29</td></tr><tr><td>219</td><td>TEST_PIN30</td></tr><tr><td>220</td><td>TEST_PIN31</td></tr><tr><td>221</td><td>FUNC_MAX</td></tr></tbody></table><h4 id="3-1-4-获取引脚信息">3.1.4 获取引脚信息</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test.<span class="built_in">help</span>([number, func=<span class="literal">False</span>])</span><br></pre></td></tr></table></figure><p>打印引脚配置提示信息。</p><h5 id="3-1-4-1-参数">3.1.4.1 参数</h5><ul><li><code>number</code>: 引脚号或功能号， 可选参数</li><li><code>func</code>: 是否启用功能号查询，默认为 <code>False</code></li></ul><h5 id="3-1-4-2-返回值">3.1.4.2 返回值</h5><p>可能为以下三种：</p><ol><li>所有引脚的配置信息（未设置 <code>number</code>）</li><li>指定引脚的详细配置信息（设置了 <code>number</code>，未设置 <code>func</code> 或设置为 <code>False</code>）</li><li>指定功能的所有可配置引脚号（设置了 <code>number</code>，并将 <code>func</code> 设置为 <code>True</code>）</li></ol><h5 id="3-1-4-3-示例">3.1.4.3 示例</h5><p><img src="C:%5CUsers%5Cqiu%5CAppData%5CRoaming%5Cmarktext%5Cimages%5C4365004fd3368f925f7f2a4096b1453d0938db9b.png" alt="屏幕截图 2025-02-06 163219.png"></p><h3 id="3-2-使用machine-Pin">3.2 使用machine.Pin</h3><p><code>machine.Pin</code> 类是 MicroPython 中用于控制输入/输出引脚的核心模块。通过该模块，我们可以轻松地管理微控制器上的 GPIO 引脚，进行基础的输入输出操作。</p><h4 id="3-2-1-构造函数-初始化引脚">3.2.1 构造函数/初始化引脚</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pin = Pin(index, mode, pull=Pin.PULL_NONE, drive=<span class="number">7</span>)</span><br></pre></td></tr></table></figure><p>用于构造pin对象，可同时对引脚进行初始化。</p><h5 id="3-2-1-1-参数">3.2.1.1 参数</h5><ul><li><code>index</code>: 引脚编号，范围为 [0, 63]。</li><li><code>mode</code>: 引脚的模式，支持输入模式或输出模式。<ul><li><code>Pin.OUT</code></li><li><code>Pin.IN</code></li></ul></li><li><code>pull</code>: 上下拉配置（<strong>可选</strong>），默认为 <code>Pin.PULL_NONE</code>。<ul><li><code>Pin.PULL_NONE</code></li><li><code>Pin.PULL_UP</code></li><li><code>Pin.PULL_DOWN</code></li></ul></li><li><code>drive</code>: 驱动能力配置（<strong>可选</strong>），默认值为 7。<ul><li>默认值为<code>7</code>，范围<code>0-15</code>，数值越大IO的驱动能力越强，除了boot 0 1其他引脚都可以设置最大15。</li></ul></li></ul><h5 id="3-2-1-2-示例">3.2.1.2 示例</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line">pin = Pin(<span class="number">1</span>, Pin.OUT, pill = Pin.PULL_NONE, drive = <span class="number">15</span>)</span><br></pre></td></tr></table></figure><h4 id="3-2-2-控制Pin">3.2.2 控制Pin</h4><h5 id="3-2-2-1-value方法">3.2.2.1 value方法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pin.value(x)</span><br></pre></td></tr></table></figure><p>获取引脚的输入电平值或设置引脚的输出电平。</p><p>参数：</p><ul><li><code>value</code>: 输出值（可选），如果传递该参数则设置引脚输出为指定值。如果不传参则返回引脚的当前输入电平值。<ul><li>0：输出低电平。</li><li>1：输出高电平。</li></ul></li></ul><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line">pin.value(<span class="number">1</span>) <span class="comment"># 设置输出高电平</span></span><br><span class="line">pin.value(<span class="number">0</span>) <span class="comment"># 设置输出低电平</span></span><br><span class="line"><span class="built_in">print</span>(pin.value()) <span class="comment"># 获取电平</span></span><br></pre></td></tr></table></figure><h5 id="3-2-2-2-mode方法">3.2.2.2 mode方法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pin.mode(x)</span><br></pre></td></tr></table></figure><p>主要用来获取或设置引脚的模式。</p><p>参数：</p><ul><li><code>mode</code>: 引脚模式（输入或输出），如果不传参则返回当前引脚的模式。<ul><li><code>Pin.OUT</code></li><li><code>Pin.IN</code></li></ul></li></ul><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line">pin.mode(Pin.IN) <span class="comment"># 配置为输入模式</span></span><br><span class="line">pin.mode(Pin.OUT) <span class="comment"># 配置为输出模式</span></span><br><span class="line"><span class="built_in">print</span>(pin.mode())</span><br></pre></td></tr></table></figure><h5 id="3-2-2-3-pull方法">3.2.2.3 pull方法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pin.pull(x)</span><br></pre></td></tr></table></figure><p>获取或设置引脚的上下拉配置。</p><p>参数:</p><ul><li><code>pull</code>: 上下拉配置（可选），如果不传参则返回当前上下拉配置。</li></ul><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line">pin.pull(Pin.PULL_NONE)</span><br><span class="line">pin.pull(Pin.PULL_UP)</span><br><span class="line">pin.pull(Pin.PULL_DOWM)</span><br><span class="line"><span class="built_in">print</span>(pin.pull())</span><br></pre></td></tr></table></figure><h5 id="3-2-2-4-drive方法">3.2.2.4  drive方法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pin.drive(x)</span><br></pre></td></tr></table></figure><p>获取或设置引脚的驱动能力。</p><h5 id="3-2-2-5-on方法">3.2.2.5 on方法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pin.on()</span><br></pre></td></tr></table></figure><p>将引脚输出设置为高电平。</p><h5 id="3-2-2-6-off方法">3.2.2.6 off方法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pin.off()</span><br></pre></td></tr></table></figure><p>将引脚输出设置为低电平。</p><h5 id="3-2-2-7-high方法">3.2.2.7 high方法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pin.high()</span><br></pre></td></tr></table></figure><p>将引脚输出设置为高电平。</p><h5 id="3-2-2-8-low方法">3.2.2.8 low方法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pin.low()</span><br></pre></td></tr></table></figure><p>将引脚输出设置为低电平。</p><h2 id="4-点亮RGB灯">4. 点亮RGB灯</h2><h3 id="4-1-LED闪烁实验">4.1 LED闪烁实验</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> FPIOA</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="comment"># 创建对象</span></span><br><span class="line">RGB = FPIOA()</span><br><span class="line"><span class="comment"># 初始化引脚，作为普通的IO</span></span><br><span class="line">RGB.set_function(<span class="number">62</span>, FPIOA.GPIO62)</span><br><span class="line">RGB.set_function(<span class="number">20</span>, FPIOA.GPIO20)</span><br><span class="line">RGB.set_function(<span class="number">63</span>, FPIOA.GPIO63)</span><br><span class="line"><span class="comment"># 配置IO输出</span></span><br><span class="line">R = Pin(<span class="number">62</span>, Pin.OUT, pull = Pin.PULL_NONE, drive = <span class="number">15</span>)</span><br><span class="line">G = Pin(<span class="number">20</span>, Pin.OUT, pull = Pin.PULL_NONE, drive = <span class="number">15</span>)</span><br><span class="line">B = Pin(<span class="number">63</span>, Pin.OUT, pull = Pin.PULL_NONE, drive = <span class="number">15</span>)</span><br><span class="line"><span class="comment"># 初始化全灭，开发板上的RGB低电平点亮</span></span><br><span class="line">R.high()</span><br><span class="line">G.high()</span><br><span class="line">B.high()</span><br><span class="line"><span class="comment"># 选择RGB颜色绿色</span></span><br><span class="line">LED = G</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    LED.low()</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    LED.high()</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>将对应LED灯的GPIO初始化为普通GPIO后实例化了这三个GPIO引脚，分别用于控制RGB灯的红、绿和蓝三种颜色的LED灯，都指定了对应的引脚号，输出模式，不使用上下拉，输出能力。</p><p>接下来初始化了LED灯的状态，通过让每个灯的控制引脚变为高电平来熄灭所有LED灯。</p><h3 id="4-2-流水灯">4.2 流水灯</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> FPIOA</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="comment"># 创建对象</span></span><br><span class="line">RGB = FPIOA()</span><br><span class="line"><span class="comment"># 初始化引脚，作为普通的IO</span></span><br><span class="line">RGB.set_function(<span class="number">62</span>, FPIOA.GPIO62)</span><br><span class="line">RGB.set_function(<span class="number">20</span>, FPIOA.GPIO20)</span><br><span class="line">RGB.set_function(<span class="number">63</span>, FPIOA.GPIO63)</span><br><span class="line"><span class="comment"># 配置IO输出</span></span><br><span class="line">R = Pin(<span class="number">62</span>, Pin.OUT, pull = Pin.PULL_NONE, drive = <span class="number">15</span>)</span><br><span class="line">G = Pin(<span class="number">20</span>, Pin.OUT, pull = Pin.PULL_NONE, drive = <span class="number">15</span>)</span><br><span class="line">B = Pin(<span class="number">63</span>, Pin.OUT, pull = Pin.PULL_NONE, drive = <span class="number">15</span>)</span><br><span class="line"><span class="comment"># 设置颜色函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_color</span>(<span class="params">r, g, b</span>):</span><br><span class="line">    <span class="keyword">if</span> r == <span class="number">0</span>:</span><br><span class="line">        R.low()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        R.high()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> g == <span class="number">0</span>:</span><br><span class="line">        G.low()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        G.high()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        B.low()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        B.high()</span><br><span class="line"></span><br><span class="line"><span class="comment"># LDE亮一会儿灭        </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delay_color</span>(<span class="params">r, g, b, delay</span>):</span><br><span class="line">    set_color(r, g, b)</span><br><span class="line">    time.sleep(delay)</span><br><span class="line">    set_color(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">    time.sleep(delay)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 红色</span></span><br><span class="line">    delay_color(<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0.5</span>)</span><br><span class="line">    <span class="comment"># 绿色</span></span><br><span class="line">    delay_color(<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0.5</span>)</span><br><span class="line">    <span class="comment"># 蓝色</span></span><br><span class="line">    delay_color(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.5</span>)</span><br><span class="line">    <span class="comment"># 黄色（红+绿）</span></span><br><span class="line">    delay_color(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0.5</span>)</span><br><span class="line">    <span class="comment"># 紫色（红+蓝）</span></span><br><span class="line">    delay_color(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0.5</span>)</span><br><span class="line">    <span class="comment"># 青色（绿+蓝）</span></span><br><span class="line">    delay_color(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>)</span><br><span class="line">    <span class="comment"># 白色（红+绿+蓝）</span></span><br><span class="line">    delay_color(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>)</span><br></pre></td></tr></table></figure><h2 id="5-按键控制">5. 按键控制</h2><h3 id="5-1-按键控制LED开关">5.1 按键控制LED开关</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> FPIOA</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="comment"># 创建FPIOA对象，初始化GPIO</span></span><br><span class="line">LED = FPIOA()</span><br><span class="line">LED.set_function(<span class="number">62</span>, FPIOA.GPIO62)</span><br><span class="line">LED.set_function(<span class="number">20</span>, FPIOA.GPIO20)</span><br><span class="line">LED.set_function(<span class="number">63</span>, FPIOA.GPIO63)</span><br><span class="line">LED.set_function(<span class="number">53</span>, FPIOA.GPIO53)</span><br><span class="line"><span class="comment"># 配置三色灯</span></span><br><span class="line">R = Pin(<span class="number">62</span>, Pin.OUT, pull = Pin.PULL_NONE, drive = <span class="number">15</span>)</span><br><span class="line">G = Pin(<span class="number">20</span>, Pin.OUT, pull = Pin.PULL_NONE, drive = <span class="number">15</span>)</span><br><span class="line">B = Pin(<span class="number">63</span>, Pin.OUT, pull = Pin.PULL_NONE, drive = <span class="number">15</span>)</span><br><span class="line"><span class="comment"># 配置按键</span></span><br><span class="line">button = Pin(<span class="number">53</span>, Pin.IN, Pin.PULL_DOWN)</span><br><span class="line">R.high()</span><br><span class="line">G.high()</span><br><span class="line">B.high()</span><br><span class="line"><span class="comment"># 选择颜色</span></span><br><span class="line">RGB = B <span class="comment"># 蓝</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">if</span> button.value() == <span class="number">1</span>: <span class="comment"># 按键按下</span></span><br><span class="line">        RGB.high()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        RGB.low()    </span><br><span class="line">        </span><br></pre></td></tr></table></figure><p>前半部分和我们在前面学习的点亮RGB灯是一样的，就是初始化灯对应的引脚。不同的是我们这里还对按键用到的GPIO（Pin53）进行了初始化，引脚62、20和63将用于控制LED灯，而引脚53将用于读取按钮的状态，将控制LED灯的引脚设置为了输出模式，将读取按钮的GPIO设置为了输入模式。</p><p>然后把按钮配置为了下拉输入模式，代表当按钮没有被按下是，输入信号为低电平（0），按下时为高电平（1）。</p><p>可以看到我们这里并没有进行按键消抖处理，这里按钮的作用是直接控制LED灯的熄灭，而不是在不同状态之间切换。当我们按下按钮时，LED灯熄灭；而当我们释放按钮时，LED灯将再次点亮。在上面的程序中，我们关注的是按钮是否被按下（按下就熄灭LED灯），而不是按钮有没有改变状态。如果我们需要判断按钮的改变状态来切换LED灯状态，就必须要进行消抖处理了，详情请看下面的程序。</p><h3 id="5-2-按键控制LED状态">5.2 按键控制LED状态</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> FPIOA</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="comment"># 创建FPIOA对象，初始化GPIO</span></span><br><span class="line">LED = FPIOA()</span><br><span class="line">LED.set_function(<span class="number">62</span>, FPIOA.GPIO62)</span><br><span class="line">LED.set_function(<span class="number">20</span>, FPIOA.GPIO20)</span><br><span class="line">LED.set_function(<span class="number">63</span>, FPIOA.GPIO63)</span><br><span class="line">LED.set_function(<span class="number">53</span>, FPIOA.GPIO53)</span><br><span class="line"><span class="comment"># 配置三色灯</span></span><br><span class="line">R = Pin(<span class="number">62</span>, Pin.OUT, pull = Pin.PULL_NONE, drive = <span class="number">15</span>)</span><br><span class="line">G = Pin(<span class="number">20</span>, Pin.OUT, pull = Pin.PULL_NONE, drive = <span class="number">15</span>)</span><br><span class="line">B = Pin(<span class="number">63</span>, Pin.OUT, pull = Pin.PULL_NONE, drive = <span class="number">15</span>)</span><br><span class="line"><span class="comment"># 配置按键</span></span><br><span class="line">button = Pin(<span class="number">53</span>, Pin.IN, Pin.PULL_DOWN)</span><br><span class="line">R.high()</span><br><span class="line">G.high()</span><br><span class="line">B.high()</span><br><span class="line">RGB = B</span><br><span class="line"><span class="comment"># 按键消抖</span></span><br><span class="line">button_delay = <span class="number">20</span> <span class="comment"># 20ms</span></span><br><span class="line">press_time = <span class="number">0</span> <span class="comment"># 记录按下的时间</span></span><br><span class="line">led_flag = <span class="literal">False</span> <span class="comment"># 记录LED状态，False表示灭</span></span><br><span class="line">button_flag = <span class="number">0</span> <span class="comment"># 记录按键状态</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    button_state = button.value() <span class="comment"># 获取当前按键状态</span></span><br><span class="line">    current_time = time.ticks_ms() <span class="comment"># 获取当前时间</span></span><br><span class="line">    <span class="comment"># 按键 0-&gt;1 代表按下，也就是检测上升沿</span></span><br><span class="line">    <span class="keyword">if</span> button_state == <span class="number">1</span> <span class="keyword">and</span> button_flag == <span class="number">0</span>:</span><br><span class="line">        <span class="comment"># 检测消抖时间</span></span><br><span class="line">        <span class="keyword">if</span> current_time - press_time &gt; button_delay:</span><br><span class="line">            <span class="keyword">if</span> led_flag:</span><br><span class="line">                RGB.high()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                RGB.low()</span><br><span class="line">                </span><br><span class="line">            led_flag = <span class="keyword">not</span> led_flag <span class="comment"># 翻转LED状态</span></span><br><span class="line">            press_time = current_time <span class="comment"># 更新按键按下时间</span></span><br><span class="line">    </span><br><span class="line">    button_flag = button_state <span class="comment"># 更新按键状态</span></span><br><span class="line">    time.sleep_ms(<span class="number">10</span>)</span><br><span class="line">        </span><br></pre></td></tr></table></figure><p>首先获取当前按钮状态和时间。如果按钮的状态从未按下（0，低电平）变为按下（1，高电平），且在消抖延迟后，程序将切换LED的状态（点亮或熄灭），然后更新LED当前状态和最后按键按下的时间。</p><p>这个程序最重要的改进就是进行了按键的消抖，确保每次按钮的状态变化都有效，避免由于机械抖动造成的错误信号。</p>]]></content>
    
    
    <summary type="html">包括学习立创庐山派的一些笔记（其实就是cv，主要是加深印象）</summary>
    
    
    
    <category term="视觉" scheme="https://choas8.github.io/categories/%E8%A7%86%E8%A7%89/"/>
    
    
    <category term="GPIO与FPIOA" scheme="https://choas8.github.io/tags/GPIO%E4%B8%8EFPIOA/"/>
    
  </entry>
  
  <entry>
    <title>prompt的技巧</title>
    <link href="https://choas8.github.io/posts/4233cb2d.html"/>
    <id>https://choas8.github.io/posts/4233cb2d.html</id>
    <published>2025-03-08T13:46:52.000Z</published>
    <updated>2025-03-08T13:51:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1>Prompt技巧思路</h1><h2 id="1-避免AI幻觉">1. 避免AI幻觉</h2><ul><li>每次让AI复述需求再做答复，确保双方理解一致</li></ul><h2 id="2-避免代码屎山">2. 避免代码屎山</h2><ul><li><strong>先Chat，后Composer</strong><ul><li>例：想要实现什么？实现的技术方案有哪些？它们的优缺点是什么？我该如何选择？怎么安装/发布？</li></ul></li><li><strong>先Save，再检查，后Accept</strong></li><li><strong>善用Checkpoint回滚</strong></li></ul><h2 id="3-Feature笔记">3. Feature笔记</h2><ul><li>Chat拆分功能需求</li><li>记录多个Notepad</li><li>Composer中@对应笔记去完成子功能</li></ul><h2 id="4-Debug技巧">4. Debug技巧</h2><ul><li>生成中出问题，记一份Notepad问题集</li><li>Chat中@问题集做咨询，并更新解决方案</li><li>Composer中@问题集方案继续生成</li></ul><h2 id="5-项目前置准备">5. 项目前置准备</h2><ul><li><strong>索引忽略</strong>：生成.Cursorignore，编辑完善，设置-Features-SYNC</li><li><strong>Docs</strong>：项目相关在线文档【需求文档|接口文档|技术文档等】</li><li><strong>项目规则</strong>：生成.Cursorrules，编辑完善；建议Chat中@各文档，检索整项目，生成后人工修正</li><li>基于项目约束AI范围使其尽量精准</li></ul><h2 id="6-封存项目文档">6. 封存项目文档</h2><ul><li>Notepad属于缓存无法长期保留，项目结束后，建议多个Notepad进行归纳后整理成Docs封存，以备回顾或下次项目检索使用</li></ul><h2 id="7-命令执行提示">7. 命令执行提示</h2><ul><li>如果需要执行命令，请暂停创建文件，让我先执行命令，为这个项目中的所有代码写上详细注释</li></ul><h2 id="8-项目开发方法">8. 项目开发方法</h2><ul><li>请你根据我的需求，一步步思考，给我开发这个项目</li></ul><h2 id="9-沟通偏好设置">9. 沟通偏好设置</h2><ul><li>在非特殊情况下请使用中文回答</li><li>不要给高层次的废话，需要实际的代码或解释</li><li>不要说&quot;你可以这样做blablabla&quot;</li><li>除非另有说明，否则保持随意</li><li>简明扼要</li><li>提出我没想到的解决方案 - 预测我的需求</li><li>把我当作专家对待</li><li>准确且全面</li><li>立即给出答案，必要时再提供详细解释</li><li>重视好的论点而不是权威，来源无关紧要</li><li>考虑新技术和反主流观点</li><li>可以使用高程度的推测或预测，但请标记出来</li><li>不要道德说教</li><li>只在至关重要且不明显的情况下讨论安全问题</li><li>内容政策问题时，提供可接受回应后再解释</li><li>在末尾引用来源</li><li>提供代码时尊重我的prettier偏好</li><li>如需多个回应，请分成多个</li><li>修改代码时保持简洁，只显示更改前后的几行</li></ul><h2 id="10-AI使用的思考">10. AI使用的思考</h2><p>AI的发展是帮助我们更快的学习和成长，大家在使用的时候千万不要迷失了自我，一味的追求完成任务而忽略掉了从中所能获得的知识，迟早有一天你是需要为这种行为买单的，不要去做渐渐被AI优化替代的这类人，更多的是提升效率，而不是替代你。</p>]]></content>
    
    
    <summary type="html">包括自己整理的一些prompt技巧</summary>
    
    
    
    <category term="技术笔记" scheme="https://choas8.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="提示词" scheme="https://choas8.github.io/tags/%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>电子知识树</title>
    <link href="https://choas8.github.io/posts/d418e895.html"/>
    <id>https://choas8.github.io/posts/d418e895.html</id>
    <published>2025-03-05T10:31:09.000Z</published>
    <updated>2025-03-05T14:04:55.000Z</updated>
    
    <content type="html"><![CDATA[<h1>电子知识树总结</h1><h2 id="一、单片机基础与编程基础">一、单片机基础与编程基础</h2><h3 id="1-编程基础">1. 编程基础</h3><ul><li>包括 C 语言基础、Python 语言基础</li><li>能够熟练使用一种语言进行各种程序设计</li></ul><h3 id="2-单片机系统">2. 单片机系统</h3><ul><li>包括 STC51、STM32F1、ESP 系列单片机的基本使用以及单片机系统电路设计</li><li>包括单片机特有的内部功能，如 STM32 USART 串口、各种定时器高级功能、ADC 转换、DMA 传输</li><li>能够熟练使用轮询、中断进行各种单片机事件处理，如串口数据收发、定时器中断等</li></ul><h3 id="3-电子电路">3. 电子电路</h3><ul><li>包括数电模电、PCB 设计制作、FPGA基本使用</li><li>会使用各种电子元件进行简单控制电路设计</li><li>会查看芯片手册和模块数据手册</li><li>会基于各种集成芯片设计供电、电池、驱动、传感、通信等功能电路</li><li>能够基于功能需求进行芯片与元器件的选型并确定设计方案</li><li>会使用运放进行运算电路设计</li><li>具备基本电路焊接技能与基本电路分析、调试的能力</li></ul><h3 id="4-通信协议">4. 通信协议</h3><ul><li>包括 UART 串口通信，I²C、SPI、CAN 总线协议，以及各个模块的不同驱动方法</li><li>能够熟练使用 UART 协议进行数据收发，并能够使用不同的上位机工具（VOFA+?）</li></ul><h2 id="二、自动控制算法与姿态解算">二、自动控制算法与姿态解算</h2><h3 id="1-电机控制">1. 电机控制</h3><ul><li>减速电机</li><li>舵机</li><li>步进电机</li><li>无刷电机</li></ul><h3 id="2-运动速度反馈和闭环控制">2. 运动速度反馈和闭环控制</h3><ul><li>编码器测速测角</li><li>PID 自动控制算法</li></ul><h3 id="3-陀螺仪与加速度计">3. 陀螺仪与加速度计</h3><ul><li>欧拉角、四元数</li><li>线性代数、矩阵运算</li><li>姿态解算</li><li>卡尔曼滤波（一直也没有太会用）</li></ul><h3 id="4-机械结构控制与运动学解析">4. 机械结构控制与运动学解析</h3><ul><li>坐标变换（基于矩阵运算）</li><li>机器人运动学解析</li></ul><h3 id="5-运动机构（对应的机械结构设计搭建、数学建模以及控制算法）">5. 运动机构（对应的机械结构设计搭建、数学建模以及控制算法）</h3><ul><li>车辆运动（原地转向、阿克曼转向、全向驱动）</li><li>云台（基于减速电机、舵机）</li><li>机械臂（总线舵机贵的要命，还是普通舵机好一些）</li><li>字车（打印机内部那个）</li><li>龙门吊</li></ul><h3 id="6-场地定位、室内定位（侧重了解原理以及相关的算法）">6. 场地定位、室内定位（侧重了解原理以及相关的算法）</h3><ul><li>红外对管定位</li><li>激光雷达、点云识别</li><li>声源定位</li></ul><h2 id="三、传感器与信号处理">三、传感器与信号处理</h2><h3 id="1-电子测量原理与传感器设计原理（侧重基本概念了解）">1. 电子测量原理与传感器设计原理（侧重基本概念了解）</h3><h3 id="2-信号处理基础知识（来自专业课的恶魔低吟，基本概念及理论知识）">2. 信号处理基础知识（来自专业课的恶魔低吟，基本概念及理论知识）</h3><ul><li>系统响应（线性时不变），如卷积、传递函数、频率响应等概念</li><li>傅里叶变换（以及其他频域分析如拉普拉斯变换、Z变换）</li><li>ADC 采集以及不同 ADC 采样方案</li><li>FFT 快速傅里叶算法的使用（不同语言的解决方案，侧重使用）<ul><li>频率分量提取</li><li>信号类型识别（基于频域特征分解）</li><li>数字滤波器</li></ul></li></ul><h3 id="3-超高速ADC采集">3. 超高速ADC采集</h3><p>熟悉STM32的DMA数据传输，或者借助FPGA进行高速ADC转换方案设计</p><h3 id="4-不同信号采集（传感器方案及应用电路设计）">4. 不同信号采集（传感器方案及应用电路设计）</h3><ul><li>音频采集<ul><li>驻极体麦克风（采集电路+ADC）</li><li>硅麦（I2S 接口和 PDM 接口）</li></ul></li><li>温湿度采集<ul><li>DS18B20</li><li>SHT20/AHT20</li></ul></li><li>光强感应</li><li>运动传感（陀螺仪、加速度计）</li><li>人体感应（触摸、红外、微波雷达）</li><li>磁场、金属、气体液体等</li></ul><h3 id="5-信号处理（侧重了解原理、选型以及方案设计）">5. 信号处理（侧重了解原理、选型以及方案设计）</h3><ul><li>基于 RLC 器件（滤波、去耦）</li><li>基于二极管器件（限幅、钳位、相乘）</li><li>基于三极管器件（放大、选通）</li><li>基于运放（比例、比较、相加、相减、相乘、相除、积分、微分、线性化）</li></ul><h3 id="6-信号生成">6. 信号生成</h3><ul><li>RC、LC 振荡电路</li><li>DAC 重放（RC 滤波或借助 DAC 模块）</li><li>DDS 直接数字频率合成</li></ul><h2 id="四、机器视觉与计算机视觉">四、机器视觉与计算机视觉</h2><h3 id="1-OpenMV-机器视觉-K210-机器视觉">1. OpenMV 机器视觉/K210 机器视觉</h3><h4 id="1-1-基本开发">1.1 基本开发</h4><ul><li>基本使用（OpenMV/MaixPy IDE 功能）</li><li>作为一个 MicroPython 开发板（mpy 基础）</li><li>作为一个嵌入式模块（IO、串口、PWM、I2C、SPI）</li><li>高级 IO 复用（K210 特有）</li><li>ulab 库使用（应该是 OpenMV 特有）</li></ul><h4 id="1-2-基于-MV-的图像处理">1.2 基于 MV 的图像处理</h4><ul><li>二值化</li><li>模糊、锐化、腐蚀</li><li>开闭区间</li></ul><h4 id="1-3-基本颜色和图形元素查找">1.3 基本颜色和图形元素查找</h4><ul><li>色块识别、形状判定</li><li>圆查找</li><li>矩形查找、线查找</li><li>模板匹配、特征匹配</li><li>AprilTag 识别</li><li>基于神经网络的物体识别（K210 特有）</li></ul><h3 id="2-OpenCV计算机视觉（侧重在使用中不断熟悉）">2. OpenCV计算机视觉（侧重在使用中不断熟悉）</h3><h4 id="2-1-Python-语言基础">2.1 Python 语言基础</h4><h4 id="2-2-计算机图像处理">2.2 计算机图像处理</h4><ul><li>裁剪、翻转、缩放、拼接</li><li>图像文件和字节数组操作</li><li>图像增强（锐化、去噪）</li><li>图像变换（旋转、仿射、透视、逆透视）</li><li>颜色空间转换</li><li>图像运算（和差，布尔逻辑，平均，腐蚀，开闭区间）</li></ul><h4 id="2-3-基本图像元素识别">2.3 基本图像元素识别</h4><ul><li>二值化（静阈值、动态阈值二值化）</li><li>搜索轮廓、形状判定</li><li>圆查找、矩形查找、线查找</li></ul><h4 id="2-4-特征检测">2.4 特征检测</h4><ul><li>Canny 边缘检测</li><li>Harris 角点检测</li><li>SIFT、ORB 特征描述与匹配识别</li><li>特征匹配（暴力匹配、NCC、KNN）</li><li>运动检测</li></ul><h4 id="2-5-基于神经网络的物体检测（关联网络和-Linux）">2.5 基于神经网络的物体检测（关联网络和 Linux）</h4><ul><li>YOLO 环境配置</li><li>数据集的准备与训练</li><li>预测与数据提取</li></ul><h2 id="五、通信与网络">五、通信与网络</h2><h3 id="1-基本模块间通信（UART、SPI、I2C）">1. 基本模块间通信（UART、SPI、I2C）</h3><h3 id="2-基于-AT指令的无线透传（蓝牙、nRF24L01、WiFi）">2. 基于 AT指令的无线透传（蓝牙、nRF24L01、WiFi）</h3><h3 id="3-TCP-IP-网络（基于-Python）">3. TCP/IP 网络（基于 Python）</h3><ul><li>网络基本概念（IP，端口，网关，子网，DNS等）</li><li>常见协议及应用（TCP、UDP、HTTP、TLS）</li><li>TCP，UDP通信基础（套接字，绑定监听建立连接，数据收发，异常处理）</li></ul><h3 id="4-ESP-系列-WiFi开发板使用">4. ESP 系列 WiFi开发板使用</h3><ul><li>基本使用（调试、烧录、上传代码）</li><li>作为一个 MicroPython 开发板（mpy 基础）</li><li>作为一个嵌入式模块（IO、串口、PWM、I2C、SPI）</li><li>作为一个 WiFi开发板（WiFi的扫描、连接、建立，网络通信）</li></ul><h2 id="六、Linux-基础">六、Linux 基础</h2><ul><li>熟练使用 Linux 基本 Shell 命令</li><li>熟悉 Linux 的系统配置，如网络配置、定时任务、系统服务</li><li>熟悉 Linux 生态，能够利用 Linux 丰富的工具集实现各种网络通信、数据处理、文件管理等</li><li>熟悉在 Linux 下的C或 Python 或 Node.js 代码开发，了解如何用它们控制底层硬件或者进行网络通信</li></ul><h2 id="七、人工智能与深度学习">七、人工智能与深度学习</h2>]]></content>
    
    
    <summary type="html">包含对电子信息工程技术栈的一些总结，来源于网络。</summary>
    
    
    
    <category term="单片机基础与编程基础" scheme="https://choas8.github.io/categories/%E5%8D%95%E7%89%87%E6%9C%BA%E5%9F%BA%E7%A1%80%E4%B8%8E%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="自动控制算法与姿态解算" scheme="https://choas8.github.io/categories/%E5%8D%95%E7%89%87%E6%9C%BA%E5%9F%BA%E7%A1%80%E4%B8%8E%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E8%87%AA%E5%8A%A8%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95%E4%B8%8E%E5%A7%BF%E6%80%81%E8%A7%A3%E7%AE%97/"/>
    
    <category term="传感器与信号处理" scheme="https://choas8.github.io/categories/%E5%8D%95%E7%89%87%E6%9C%BA%E5%9F%BA%E7%A1%80%E4%B8%8E%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E8%87%AA%E5%8A%A8%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95%E4%B8%8E%E5%A7%BF%E6%80%81%E8%A7%A3%E7%AE%97/%E4%BC%A0%E6%84%9F%E5%99%A8%E4%B8%8E%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/"/>
    
    <category term="机器视觉与计算机视觉" scheme="https://choas8.github.io/categories/%E5%8D%95%E7%89%87%E6%9C%BA%E5%9F%BA%E7%A1%80%E4%B8%8E%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E8%87%AA%E5%8A%A8%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95%E4%B8%8E%E5%A7%BF%E6%80%81%E8%A7%A3%E7%AE%97/%E4%BC%A0%E6%84%9F%E5%99%A8%E4%B8%8E%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89%E4%B8%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    <category term="通信与网络" scheme="https://choas8.github.io/categories/%E5%8D%95%E7%89%87%E6%9C%BA%E5%9F%BA%E7%A1%80%E4%B8%8E%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E8%87%AA%E5%8A%A8%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95%E4%B8%8E%E5%A7%BF%E6%80%81%E8%A7%A3%E7%AE%97/%E4%BC%A0%E6%84%9F%E5%99%A8%E4%B8%8E%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89%E4%B8%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/%E9%80%9A%E4%BF%A1%E4%B8%8E%E7%BD%91%E7%BB%9C/"/>
    
    <category term="人工智能与深度学习" scheme="https://choas8.github.io/categories/%E5%8D%95%E7%89%87%E6%9C%BA%E5%9F%BA%E7%A1%80%E4%B8%8E%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E8%87%AA%E5%8A%A8%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95%E4%B8%8E%E5%A7%BF%E6%80%81%E8%A7%A3%E7%AE%97/%E4%BC%A0%E6%84%9F%E5%99%A8%E4%B8%8E%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89%E4%B8%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/%E9%80%9A%E4%BF%A1%E4%B8%8E%E7%BD%91%E7%BB%9C/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Linux 基础" scheme="https://choas8.github.io/categories/%E5%8D%95%E7%89%87%E6%9C%BA%E5%9F%BA%E7%A1%80%E4%B8%8E%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E8%87%AA%E5%8A%A8%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95%E4%B8%8E%E5%A7%BF%E6%80%81%E8%A7%A3%E7%AE%97/%E4%BC%A0%E6%84%9F%E5%99%A8%E4%B8%8E%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89%E4%B8%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/%E9%80%9A%E4%BF%A1%E4%B8%8E%E7%BD%91%E7%BB%9C/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/Linux-%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="技术笔记" scheme="https://choas8.github.io/tags/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>电路第一二章</title>
    <link href="https://choas8.github.io/posts/a5b4b7c0.html"/>
    <id>https://choas8.github.io/posts/a5b4b7c0.html</id>
    <published>2025-03-05T04:59:31.000Z</published>
    <updated>2025-03-05T10:26:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1>电路基础</h1><hr><h2 id="第一章-电路模型与基本定律">第一章 电路模型与基本定律</h2><h3 id="1-1-实际电路-vs-电路模型">1.1 实际电路 vs 电路模型</h3><ul><li><strong>实际电路</strong>：为完成某种预期目的而设计、制作、运行，由电路部件和电路器件相互连接而成的电流通路装置<ul><li><strong>功能分类</strong>：<ul><li><strong>强电电路</strong>：能量的传输、转换、分配、使用。</li><li><strong>弱电电路</strong>：信息的传递、控制、处理。</li></ul></li></ul></li><li><strong>电路模型</strong>：用理想元件（电阻、电源）抽象表示实际电路，便于分析。<ul><li><strong>核心概念</strong>：<ul><li><strong>电源</strong>：提供电能（如电池）。</li><li><strong>负载</strong>：消耗电能的设备（如灯泡）。</li><li><strong>激励</strong>：电源产生的电压/电流。</li><li><strong>响应</strong>：电路中由激励产生的电压/电流。</li><li><strong>输入</strong>：根据激励与响应的关系，把激励称为输入。</li><li><strong>输出</strong>：根据激励与响应的关系，把响应称为输出。</li></ul></li></ul></li></ul><hr><h3 id="1-2-电流与电压的参考方向">1.2 电流与电压的参考方向</h3><ul><li><strong>电流方向</strong>：假设一个参考方向，计算结果的正负决定实际方向。<ul><li><strong>示例</strong>：若电流参考方向为从左到右，计算得 <code>I = -2A</code>，则实际方向为<strong>从右到左</strong>。</li></ul></li><li><strong>电压方向</strong>：假设从“+”极指向“-”极的参考方向。</li><li><strong>关联方向</strong>：电流与电压参考方向一致时为关联方向，否则为非关联方向。</li></ul><blockquote><p>提示</p><ul><li>电路中电位参考点可任意选择；</li><li>参考点一经选定，电路中各点的电位值就唯一确定；</li><li>当选择不同的电位参考点时，电路中各点电位值将改变，但任意两点间电压保持不变。</li></ul></blockquote><p><img src="https://tuchuang.org.cn/imgs/2025/03/05/e3ffbeaab74e9371.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/4d275f0f9e205a0e.jpg" alt=""></p><hr><h3 id="1-3-电功率与能量">1.3 电功率与能量</h3><ul><li><strong>功率公式</strong>：<code>P = 电压 × 电流</code><ul><li><strong>关联方向下</strong>：<code>P &gt; 0</code> 表示元件吸收功率，<code>P &lt; 0</code> 表示发出功率。</li></ul></li><li><strong>能量计算</strong>：<code>能量 = 功率 × 时间</code>（如灯泡工作1小时消耗 <code>W = P × 3600秒</code>）。<br><img src="https://tuchuang.org.cn/imgs/2025/03/05/96956226f7cb525f.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/f3192385800ce18b.jpg" alt=""></li></ul><hr><h3 id="1-4-电路元件详解">1.4 电路元件详解</h3><p><img src="https://tuchuang.org.cn/imgs/2025/03/05/c3edfe8391efbe0e.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/37c3450aa49b04ef.jpg" alt=""></p><h4 id="1-4-1-电阻元件">1.4.1 电阻元件</h4><ul><li><strong>欧姆定律</strong>：<code>电压 = 电阻 × 电流</code>（关联方向下成立）。</li><li><strong>特殊情况</strong>：<ul><li><strong>开路</strong>：电阻无穷大，电流为0。</li><li><strong>短路</strong>：电阻为0，电压为0。</li></ul></li><li><strong>功率计算</strong>：<code>P = I²R = U²/R</code>（电阻总是吸收功率）。</li></ul><p><img src="https://tuchuang.org.cn/imgs/2025/03/05/45d69d48a88ba9c9.jpg" alt=""></p><hr><h4 id="1-4-2-理想电源">1.4.2 理想电源</h4><ul><li><strong>电压源</strong>：输出电压恒定，电流由外电路决定（如干电池）。<ul><li><strong>特性</strong>：不可短路（否则电流无限大）。</li></ul></li><li><strong>电流源</strong>：输出电流恒定，电压由外电路决定（如恒流芯片）。<br><img src="https://tuchuang.org.cn/imgs/2025/03/05/2110c8e0c9afc85c.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/59752e5083c6b920.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/6b7d70db633669cc.jpg" alt=""></li></ul><hr><h4 id="1-4-3-受控电源">1.4.3 受控电源</h4><ul><li><strong>定义</strong>：输出量受电路中另一处电压/电流控制。</li><li><strong>四种类型</strong>：<table><thead><tr><th>类型</th><th>控制关系</th><th>示例</th></tr></thead><tbody><tr><td>VCVS</td><td>输出电压 ∝ 控制电压</td><td>晶体管放大器</td></tr><tr><td>CCVS</td><td>输出电压 ∝ 控制电流</td><td>传感器信号转换</td></tr><tr><td>VCCS</td><td>输出电流 ∝ 控制电压</td><td>场效应管</td></tr><tr><td>CCCS</td><td>输出电流 ∝ 控制电流</td><td>双极型晶体管</td></tr></tbody></table></li></ul><hr><h3 id="1-5-基尔霍夫定律">1.5 基尔霍夫定律</h3><h4 id="1-5-1-基尔霍夫电流定律（KCL）">1.5.1 基尔霍夫电流定律（KCL）</h4><ul><li><strong>内容</strong>：流入任一节点的电流总和等于流出电流总和。<ul><li><strong>示例</strong>：若 <code>I₁=2A</code>，<code>I₂=3A</code>，则流出电流 <code>I₃ = I₁ + I₂ = 5A</code>。</li></ul></li></ul><p><img src="https://tuchuang.org.cn/imgs/2025/03/05/9e773d79a7040afc.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/734a1d63708b64a2.jpg" alt=""></p><hr><h4 id="1-5-2-基尔霍夫电压定律（KVL）">1.5.2 基尔霍夫电压定律（KVL）</h4><ul><li><strong>内容</strong>：闭合回路中所有电压的代数和为零。<ul><li><strong>应用步骤</strong>：<ol><li>设定回路绕行方向（顺时针或逆时针）。</li><li>沿方向累加电压：电源电压与绕行方向一致取负，相反取正。</li></ol></li></ul></li></ul><p><img src="https://tuchuang.org.cn/imgs/2025/03/05/8e648e73a81e8db7.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/d8e0341e254a44d1.jpg" alt=""></p><h3 id="1-6-例题总结">1.6 例题总结</h3><p><img src="https://tuchuang.org.cn/imgs/2025/03/05/f88d80b41a8beaeb.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/28c220748a9a44e2.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/8163bc2f7e7f3994.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/e6b2aca6556c6520.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/06eeb8b186cd061a.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/397e280e42889347.jpg" alt=""></p><hr><h2 id="第二章-电阻电路的等效变换">第二章 电阻电路的等效变换</h2><p><img src="https://tuchuang.org.cn/imgs/2025/03/05/7f0a96a50455c7f0.jpg" alt=""></p><h3 id="2-1-等效电路概念">2.1 等效电路概念</h3><ul><li><strong>等效条件</strong>：两个电路的端口电压-电流关系（VCR）相同。</li><li><strong>目的</strong>：简化复杂电路，方便计算。</li></ul><hr><h3 id="2-2-电阻的串联与并联">2.2 电阻的串联与并联</h3><h4 id="2-2-1-串联电阻">2.2.1 串联电阻</h4><ul><li><strong>总电阻</strong>：<code>R_eq = R₁ + R₂ + ... + Rₙ</code></li><li><strong>分压公式</strong>：<code>Uₖ = (Rₖ / R_eq) × 总电压</code></li></ul><hr><h4 id="2-2-2-并联电阻">2.2.2 并联电阻</h4><ul><li><strong>总电导</strong>：<code>G_eq = G₁ + G₂ + ... + Gₙ</code></li><li><strong>分流公式</strong>：<code>Iₖ = (Gₖ / G_eq) × 总电流</code></li></ul><p><img src="https://tuchuang.org.cn/imgs/2025/03/05/cb16e44caa6e37b2.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/acecc182d95105c0.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/510800082bdf0b4f.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/4fdd975d4535da03.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/9a1209c483940543.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/7879d4d8a6232e87.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/f4f8ff546f506cff.jpg" alt=""></p><hr><h3 id="2-3-Y-Δ（星型-三角型）变换">2.3 Y-Δ（星型-三角型）变换</h3><ul><li><strong>适用场景</strong>：复杂桥接电路无法直接串并联时使用。</li><li><strong>变换公式</strong>：<ul><li><strong>Y→Δ</strong>：<code>R_Δ = (R₁R₂ + R₂R₃ + R₃R₁) / Rₖ</code></li><li><strong>Δ→Y</strong>：<code>R_Y = R_Δ相邻电阻乘积 / ΣR_Δ</code></li></ul></li></ul><p><img src="https://tuchuang.org.cn/imgs/2025/03/05/4a14d51ee9ebb3c7.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/18d18405396cf205.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/7610976abf5c82aa.jpg" alt=""></p><hr><h3 id="2-4-电源等效变换">2.4 电源等效变换</h3><h4 id="2-4-1-电压源与电流源的互换">2.4.1 电压源与电流源的互换</h4><ul><li><strong>电压源→电流源</strong>：<code>I_S = U_S / R</code>，并联电阻R。</li><li><strong>电流源→电压源</strong>：<code>U_S = I_S × R</code>，串联电阻R。</li></ul><hr><h4 id="2-4-2-实际电源模型">2.4.2 实际电源模型</h4><ul><li><strong>实际电压源</strong>：理想电压源 + 串联内阻。</li><li><strong>实际电流源</strong>：理想电流源 + 并联内阻。</li></ul><h2 id=""><img src="https://tuchuang.org.cn/imgs/2025/03/05/80cd2e7fb41da67a.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/7ef1aa6e62d19717.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/a00d4b817d4bd9ac.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/ff385f4a580cfee6.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/b3f20c2d80e187d5.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/bbc726fc3dce3865.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/f4f201672ec3aeba.jpg" alt=""></h2><h3 id="2-5-输入电阻计算">2.5 输入电阻计算</h3><ul><li><strong>定义</strong>：从端口看进去的等效电阻。</li><li><strong>方法</strong>：<ol><li><strong>串并联法</strong>：直接化简电阻网络。</li><li><strong>加压求流法</strong>：端口加电压U，测电流I，<code>R_in = U / I</code>。</li></ol></li></ul><p><img src="https://tuchuang.org.cn/imgs/2025/03/05/7d4c7de2eaf27df9.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/149d8385596bff5f.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/7c2add0389fc8f3d.jpg" alt=""><br><img src="https://tuchuang.org.cn/imgs/2025/03/05/bb3ab0f12561c70f.jpg" alt=""></p><hr>]]></content>
    
    
    <summary type="html">包含对大一下电路B这门课的学习笔记，图片全是例题，没听课，啊啊啊啊啊啊啊看不懂</summary>
    
    
    
    <category term="学业课程" scheme="https://choas8.github.io/categories/%E5%AD%A6%E4%B8%9A%E8%AF%BE%E7%A8%8B/"/>
    
    
    <category term="电路模型与基本定律" scheme="https://choas8.github.io/tags/%E7%94%B5%E8%B7%AF%E6%A8%A1%E5%9E%8B%E4%B8%8E%E5%9F%BA%E6%9C%AC%E5%AE%9A%E5%BE%8B/"/>
    
    <category term="电阻电路的等效变换" scheme="https://choas8.github.io/tags/%E7%94%B5%E9%98%BB%E7%94%B5%E8%B7%AF%E7%9A%84%E7%AD%89%E6%95%88%E5%8F%98%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>k230学习笔记-基础</title>
    <link href="https://choas8.github.io/posts/80afbdac.html"/>
    <id>https://choas8.github.io/posts/80afbdac.html</id>
    <published>2025-03-04T08:30:07.000Z</published>
    <updated>2025-03-05T04:39:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1>第一章 MicroPython基础</h1><ol><li>注释</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单行注释</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">多行注释</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;注释学习&quot;</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>运算符</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">10</span> + <span class="number">5</span>) <span class="comment"># 加法</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">10</span> - <span class="number">5</span>) <span class="comment"># 减法</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">10</span> * <span class="number">5</span>) <span class="comment"># 乘法</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">10</span> / <span class="number">5</span>) <span class="comment"># 除法</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">7</span> // <span class="number">3</span>) <span class="comment"># 整除</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">7</span> % <span class="number">3</span>)  <span class="comment"># 取余</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">3</span> ** <span class="number">2</span>) <span class="comment"># 指数</span></span><br></pre></td></tr></table></figure><ol start="3"><li>数据类型转换</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">3.14</span></span><br><span class="line"><span class="comment"># 将x转换为整数</span></span><br><span class="line">x1 = <span class="built_in">int</span>(x)</span><br><span class="line"><span class="built_in">print</span>(x1)</span><br><span class="line">y = <span class="number">3</span></span><br><span class="line"><span class="comment"># 将y转换为浮点数</span></span><br><span class="line">y1 = <span class="built_in">float</span>(y)</span><br><span class="line"><span class="built_in">print</span>(y1)</span><br><span class="line">z = <span class="number">123</span></span><br><span class="line">z1 = <span class="built_in">str</span>(z)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;将整数转换为字符串:&quot;</span>, z1)</span><br><span class="line"><span class="comment"># 将布尔值转换为字符串</span></span><br><span class="line">b = <span class="literal">True</span></span><br><span class="line">b1 = <span class="built_in">str</span>(b)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;将布尔值转换为字符串:&quot;</span>, b1)</span><br></pre></td></tr></table></figure><ol start="4"><li>字符串</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 字符串定义</span></span><br><span class="line">a = <span class="string">&#x27;Hello K230&#x27;</span>     <span class="comment"># 单引号定义</span></span><br><span class="line">b = <span class="string">&quot;Hello K230&quot;</span>     <span class="comment"># 双引号定义</span></span><br><span class="line">c = <span class="string">&quot;&quot;&quot;Hello K230&quot;&quot;&quot;</span> <span class="comment"># 三引号定义</span></span><br><span class="line">d = <span class="string">&#x27;Hello&#x27;</span></span><br><span class="line"><span class="comment"># 字符串拼接</span></span><br><span class="line"><span class="built_in">print</span>(d + <span class="string">&#x27;K230&#x27;</span>)</span><br><span class="line"><span class="comment"># 字符串格式化</span></span><br><span class="line">name = <span class="string">&quot;卢本伟&quot;</span></span><br><span class="line">age = <span class="number">18</span></span><br><span class="line">height = <span class="number">1.80</span></span><br><span class="line">inf = <span class="string">&quot;我叫%s，已经%d啦，身高%.2f米。&quot;</span> % (name, age, height)</span><br><span class="line"><span class="built_in">print</span>(inf)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="5"><li>判断</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># if判断</span></span><br><span class="line">age = <span class="number">100</span></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;你可以干xxx了&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> age &gt;= <span class="number">20</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;你都超过20岁了，可以干xxx了&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;你还没成年哦&quot;</span>)</span><br><span class="line">    </span><br></pre></td></tr></table></figure><ol start="6"><li>循环</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># while循环</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">5</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;i = %d&quot;</span> % i)</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"><span class="comment"># for循环</span></span><br><span class="line">name = <span class="string">&quot;K230&quot;</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> name:</span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line">    </span><br></pre></td></tr></table></figure><ol start="7"><li>函数</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 函数定义</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">k230</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(x):</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line"><span class="comment"># 函数调用</span></span><br><span class="line">k230(<span class="number">3</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="8"><li>类与继承</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义一个类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">k230</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, a</span>):  <span class="comment"># 构造函数</span></span><br><span class="line">        <span class="variable language_">self</span>.a = <span class="number">1</span>  <span class="comment"># 实例变量</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">method</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span>  <span class="comment"># 方法实现</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化对象</span></span><br><span class="line">obj = k230(<span class="string">&quot;hello&quot;</span>)</span><br><span class="line"><span class="comment"># 访问属性</span></span><br><span class="line">obj.a = <span class="number">2</span>  <span class="comment"># 修改实例变量</span></span><br><span class="line"><span class="built_in">print</span>(obj.a)  <span class="comment"># 输出实例变量</span></span><br><span class="line"><span class="comment"># 调用方法</span></span><br><span class="line">obj.method()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 继承</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Child</span>(<span class="title class_ inherited__">k230</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, a, child_a</span>):  <span class="comment"># 修正构造函数</span></span><br><span class="line">        <span class="built_in">super</span>().__init__(a)  <span class="comment"># 调用父类构造函数</span></span><br><span class="line">        <span class="variable language_">self</span>.child_a = child_a  <span class="comment"># 添加子类特有的属性</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化子类对象</span></span><br><span class="line">child_obj = Child(<span class="string">&quot;hello&quot;</span>, <span class="string">&quot;child_value&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(child_obj.a)  <span class="comment"># 输出父类的实例变量</span></span><br><span class="line"><span class="built_in">print</span>(child_obj.child_a)  <span class="comment"># 输出子类的实例变量</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">包括学习立创庐山派的一些笔记（其实就是cv，主要是加深印象）</summary>
    
    
    
    <category term="视觉" scheme="https://choas8.github.io/categories/%E8%A7%86%E8%A7%89/"/>
    
    
    <category term="MicroPython基础" scheme="https://choas8.github.io/tags/MicroPython%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>嵌入式学习的方向参考</title>
    <link href="https://choas8.github.io/posts/d1fee16e.html"/>
    <id>https://choas8.github.io/posts/d1fee16e.html</id>
    <published>2025-03-02T05:40:03.000Z</published>
    <updated>2025-03-04T06:43:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1>嵌入式系统是什么</h1><blockquote><p>Software and hardware can be customized, suitable for embedded application systems with strict requirements for functionality, reliability, cost, volume, and power consumption</p></blockquote><p>软硬件可裁减，适用于应用系统的(embedded)、对功能、可靠性、成本、体积、功耗有严格要求的专用计算机系统。</p><hr><h2 id="“嵌入”，它与计算机系统的区别">“嵌入”，它与计算机系统的区别</h2><p>嵌入就是你把软件嵌入（写入）到硬件里去了，你不能很方便地去更改里面的软件，比如电视机、空调遥控器，你很难去更改按钮的逻辑，比如按关机键改为换频道，更重要的是更改它没有必要。所以可以嵌入，而且由于成本、可靠性种种，嵌入也是最优解。</p><hr><h2 id="特征对比表">特征对比表</h2><table><thead><tr><th>特征</th><th>通用计算机</th><th>嵌入式系统</th></tr></thead><tbody><tr><td>形式和类型</td><td>看得见的计算机。按其体系结构、运算速度和结构规模等因素分为大、中、小型机和微机。</td><td>看不见的计算机。形式多样，应用领域广泛，按应用来分。</td></tr><tr><td>组成</td><td>通用处理器、标准总线和外设。软件和硬件相对独立。</td><td>面向应用的嵌入式微处理器，总线和外部接口多集成在处理器内部。软件与硬件是紧密集成在一起的。</td></tr><tr><td>开发方式</td><td>开发平台和运行平台都是通用计算机</td><td>采用交叉开发方式，开发平台一般是通用计算机，运行平台是嵌入式系统。</td></tr><tr><td>二次开发</td><td>应用程序可重新编制</td><td>一般不能再编程</td></tr></tbody></table><hr><h2 id="“可剪裁”和“专用”意味什么">“可剪裁”和“专用”意味什么</h2><blockquote><p><strong>提示</strong><br>无论是嵌入式硬件还是软件编程，要用模块化的思维去学习。</p></blockquote><p>我的一些同学真的就是跟着那些 STM32 单片机教程完整看下来的，而大多数都会忘记之前讲的代码，比如I2C通讯应该怎么初始化、怎么使用，然后又要回头去看。学完单片机这类教程的课事实上并不能让你真正学会，因为它们并不是每个项目都需要的，嵌入式系统是讲究“专用”的。</p><blockquote><p><strong>提示</strong><br>因此，正确的学习方法是以项目为导向的学习方法，要用什么就学什么，在遇到问题解决问题当中积累经验。</p></blockquote><p>想用 STM32 驱动电机，然后你自然会发现单靠芯片无法驱动，需要驱动模块……<br>（在长达近一学期的万能工科生基础教程完结后，我会开始一个项目一个项目和大家一起做）</p><hr><h2 id="了解嵌入式">了解嵌入式</h2><h3 id="嵌入式系统的分类">嵌入式系统的分类</h3><ul><li><strong>初级</strong>：以MCS51为代表的8位MCU应用系统 —— C51 单片机</li><li><strong>中级</strong>：以ARM7/Cortex-M3/4为代表的32位机系统，配合轻量级实时操作系统(RTOS)的应用 —— STM32</li><li><strong>高级</strong>：以Cortex-A8/15等为代表的32/64位机系统，应用复杂的操作系统(Linux、Android、WinCE等) —— 树莓派</li></ul><blockquote><p><strong>提示</strong><br>因为专用性，如果只是为了应用，不存在说一定要先学 C51 才能学 STM32, esp32 之类的。</p></blockquote><p>比如想用 STM32 和树莓派制作一个小车，那么以现有的代码资料等等能很快做出来，而不需要你知道关于 C51 的任何东西。这也是嵌入式学习一大特点：懂原理和会编程使用关联度较低。最后再提。</p><hr><h2 id="嵌入式系统组成模型">嵌入式系统组成模型</h2><p><img src="../assets/w6-1.D8_JO-ew_Z19ROrE.webp" alt="嵌入式系统组成模型"><br>特点：一切围绕嵌入式处理器，它相当于集成了计算机系统当中的运算器、控制器、存储器。（图中存储器是 TF 卡之类的外设存储设备）</p><hr><h2 id="嵌入式处理器的分类">嵌入式处理器的分类</h2><p><img src="../assets/w6-2.De24QBjJ_ZpBJWh.webp" alt="s400"></p><ul><li><strong>DSP（数字信号处理器）</strong>：主要应用于通信、音视频处理、图像处理等领域</li><li><strong>SOC</strong>：所有功能做在一个芯片上，工业规模大，成本下降、尺寸减少</li></ul><p>刚刚我们划分嵌入式系统的低级中级属于 MCU ，高级属于 MPU，简单粗暴的划分方式就是能否跑操作系统。</p><hr><h2 id="核心：怎么排事">核心：怎么排事</h2><p>毫无疑问，它在硬件上也是用冯诺依曼结构，下面我们将以 STM32 的芯片为例。<br><img src="../assets/w6-3.3awyR3oJ_2dXFvE.webp" alt="s500"></p><p>从输入开始，有两种分法：</p><ol><li>内部输入和外部输入</li><li>常规输入（日常任务）和异常输入（突发事件）</li></ol><p>对于嵌入式来说，他最关心的不是任务来自哪里，而是任务紧急程度以及如何安排。常规的事不必介绍，主要介绍“突发情况”——中断的处理逻辑。</p><hr><h3 id="NVIC">NVIC</h3><p>嵌套向量中断控制器。举个例子来理解中断和对它的处理：</p><p>你安排一个下午来写作业，写着写着，查煤气表的来敲门，于是你停下写作业去开门，等他查完表之后回来继续写作业。</p><blockquote><p><strong>处理逻辑</strong>：STM32 内核通过 NVIC 实现中断，根据中断向量表跳转到对应处理程序。</p></blockquote><p>处理查煤气表的事打断了你写作业，这就是<strong>中断</strong>（外部中断）。处理方法在 STM32 内核中主要用 NVIC 实现。它会根据你要处理事件，告诉你应该怎么做（<strong>中断向量表</strong>：一段存储在固定地址的代码区域，包含了所有中断处理程序的入口地址；当一个中断发生时，处理器会跳转到中断向量表中相应的中断处理程序地址处执行中断处理代码）。</p><p>如果查煤气表的师傅进来的同时，你的电话响了，于是你去接电话，发现是骚扰电话，于是你回来等查煤气表的人。</p><p>这就是<strong>中断嵌套</strong>。</p><p>如果在师傅敲门的同时，你发现的番茄钟响了（表示你该休息了）（<strong>内部中断</strong>：定时器、系统异常等等），你肯定先去开门再休息，这就是<strong>中断优先级</strong>。</p><p>如果送走查煤气表的人，隔壁邻居送鸡蛋来了，STM32 会处理完之后再去写作业，而 C51 会回去写作业的地方再到门口处理邻居送鸡蛋，再回来写作业，这就是 STM32 的<strong>末尾连锁机制</strong>。</p><p><img src="../assets/w6-5.jbl3WL-G_Z29vvaO.webp" alt="s500"></p><h3 id="存储器保护单元（MPU）">存储器保护单元（MPU）</h3><p>我们把常规的事（写作业）和中断事件分别叫普通应用程序（线程模式）和中断服务程序（处理模式）。但是同样是常规事件（线程上）也分轻重缓急，于是我们又分为<strong>特权级和用户级</strong>，特权级有处理模式和线程模式，用户级只有线程模式。</p><p>特权级：该级别的程序可以访问所有范围的存储器（如果有MPU，还要在MPU规定的禁地之外），并且可以执行所有指令； 用户级：用户级程序不能直接改写CONTROL寄存器，需执行一条系统调用指令(SVC)，由异常服务例程修改CONTROL寄存器，才能在用户级的线程模式下重新进入特权级。（Reset 重启就是特权级线程模式）</p><p>特权级线程就是能访问 MPU、NVIC、SCB（系统控制）、STK（系统时钟） 这四个比较特别的单元。<br><img src="../assets/w6-6.vQ3koCyh_89bt1.webp" alt="s500"><br>MPU 可以对特权级访问和用户级访问分别施加不同的访问限制，以防止恶意程序对系统的破坏。</p><p>##核心：怎么干事##</p><p>刚刚 MPU 和 NVIC 等已经帮我们安排好了要做的事了，那么具体应该怎么做呢？比如写作业，你需要知道要用到的知识（数据），需要写它（执行的代码），还需要知道怎么一步一步做（读懂代码；如何一句句处理）。</p><h3 id="两种编排结构">两种编排结构</h3><p>哈佛结构：指令和数据总线分开，无瓶颈；数据（RAM）和指令（ROM：存代码）地址相同，比如地址都是0x30H，但是两个不同小区，完全分开，用不同的指令（比如汇编语言的 MOV，MOVC）来区别这个地址是哪个小区的。</p><p>普林斯顿结构：指令和数据总线共用，会出现瓶颈；数据和指令是在一起的，同个小区，但是地址不同。</p><h3 id="C语言到汇编语言到指令集">C语言到汇编语言到指令集</h3><p>我们在编程时用的C语言是对汇编语言的“封装”，为了减少代码量，编写逻辑更符合人性。但是电脑不懂，它会先把你这个C语言转化为汇编语言，再由汇编语言转化为机器指令。</p><p>汇编语言是机器指令的助记符，比如 MOV 就是把一个寄存器的值赋给另一个寄存器，ADD 就是把两个寄存器的值相加，SUB 就是把两个寄存器的值相减。</p><p>指令集是指CPU支持的指令种类，比如 ARM指令集、MIPS指令集、x86指令集等等。Cortex-M3 不支持 ARM 指令集，支持 Thumb-2 指令集。</p><h3 id="处理指令">处理指令</h3><p>文章要一行行看，指令也要一条条读，STM32 采用三级流水的方式来读指令：<br><img src="../assets/w6-4.Djn5pUih_17mQTO.webp" alt="s500"><br>想象三个工人，一个取指令，一个译码，一个执行，同时工作：</p><ul><li>取指令：从 ROM 或者 RAM 取出指令，放到指令寄存器（IR）中。</li><li>译码：根据指令寄存器中的指令，确定指令的操作数和操作码。</li><li>执行：根据操作码和操作数，执行指令。</li></ul><p>特别地：如果遇到 if 语句这种判断语句怎么办，使用分支预测机构，if 语句的 A 和 B 分支我都取指令，执行完之后丢掉一个分支。</p><h2 id="芯片：算什么事">芯片：算什么事</h2><p>刚刚这些都是那块芯片里面内核干的工作，内核之外的片上资源就只干一件事：告诉内核要做什么事（定义事）。<br><img src="../assets/w6-7.DijMgrMa_Z109w07.webp" alt="s500"></p><ul><li>RCC－复位和时钟控制：对系统的时钟进行配置，使能各模块的时钟（其他外设在上电的情况下，默认是没有时钟的，不给时钟的情况下，操作外设是无效的，外设不会工作，这样目的是降低功耗；所以在操作外设之前，必须要先使能它的时钟，用RCC完成时钟的使能）</li><li>GPIO—通用IO口：可用于点灯、读取按键等（最基本的功能）</li><li>AFIO－复用IO口：完成复用功能端口的重定义，还有中断端口的配置</li><li>EXTI－外部中断：配置好外部中断后，当引脚有电平变化时，就可以触发中断，让CPU来处理任务</li><li>TIM—定时器：最常用、功能最多的外设分高级定时器，通用定时器，基本定时器三种；最复杂－&gt;高级定时器，常用－&gt;通用定时器；不仅可以完成定时中断，还可以完成测频率、生成PWM波形（电机驱动、舵机驱动最基本的要求）、配置成专用的编码器接口等功能</li><li>ADC－模数转换器：STM32配置了12位的AD转换器，可以直接读取IO口的模拟电压值，无需外部连接AD芯片，使用方便~~</li><li>DMA—直接内存访问：可帮助CPU完成搬运大量数据这样的繁杂任务</li><li>USART—同步/异步串口通信：平时用的UART是异步串口的意思；此处USART既支持异步串口，也支持同步串口；</li><li>I2C—I2C通信：（与SPI为）两种常用的通信协议。STM32中配置了它们的控制器，可以用硬件来输出时序波形，使用起来高效；（用通用IO口来模拟时序波形也可以）</li><li>SPI－SPI通信：通信协议</li><li>CAN－CAN通信：通信协议，一般用于汽车领域</li><li>USB—USB通信：通信协议，可做模拟鼠标、模拟U盘等设备</li><li>RTC－实时时钟：在STM32内部完成年月日、时分秒的计时功能，可接外部备用电池，计时掉电也能正常运行</li><li>CRC—CRC校验：一种数据的校验方式，用于判断数据的正确性</li><li>PWR－电源控制：可以让芯片进入睡眠模式等状态，以达到省电的目的</li><li>BKP－备份寄存器：存储器，当系统掉电时仍可由备用电池保持数据（这个根据需要可以完成一些特殊功能）</li><li>IWDG－独立看门狗：当单片机因为电磁干扰死机或者程序设计不合理出现死循环时看门狗可以及时复位芯片，保证系统的稳定</li><li>WWDG－窗口看门狗：同上</li><li>DAC－数模转换器：可以在IO口直接输出模拟电压，是ADC模数转换的逆过程</li><li>SDIO－SD卡接口：可以用来读取SD卡</li><li>FSMC－可变静态存储控制器：可以用于扩展内存，或配制成其他总线协议，用于某些硬件的操作</li><li>USB OTG－USB主机接口：用OTG功能，可以让STM32作为USB主机去读取其他USB设备</li></ul><h2 id="小结">小结</h2><p>还记得刚开始我们说，应用方面实现一个东西和理解芯片的原理关系不大，因为每个芯片都帮我干完了三件事：定义事、怎么排事、怎么干事。我们只需要用 C 语言（更高级的语言）告诉它要做什么事，它就能帮我干完。总结一下：</p><blockquote><p>提示<br>如果只是为了应用，比如做个小车、做个桌面摆件等，<br>1. 不需要从流水灯之类的一个一个跟着那些视频教程学，只需要会化用（善用 AI）；<br>2. 不存在说一定要先学 C51 才能学 STM32, esp32 之类的，任何一款单片机或单板机都可以是 开始的地方（当然从资料更多的单片机开始学一定更容易）；<br>3.项目导向</p></blockquote>]]></content>
    
    
    <summary type="html">转载自b站up：万能工科生烤鱼.</summary>
    
    
    
    <category term="嵌入式学习" scheme="https://choas8.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="嵌入式开发" scheme="https://choas8.github.io/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
    <category term="STM32" scheme="https://choas8.github.io/tags/STM32/"/>
    
    <category term="学习路径" scheme="https://choas8.github.io/tags/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84/"/>
    
    <category term="单片机" scheme="https://choas8.github.io/tags/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    <category term="系统架构" scheme="https://choas8.github.io/tags/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>自平衡小车PID参数调试实践</title>
    <link href="https://choas8.github.io/posts/cd760cd8.html"/>
    <id>https://choas8.github.io/posts/cd760cd8.html</id>
    <published>2025-02-28T08:31:50.000Z</published>
    <updated>2025-03-04T06:43:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1>平衡小车容易踩的坑</h1><h2 id="一、直立环的误区">一、直立环的误区</h2><p><strong>坑点1：只加直立环就想调平衡</strong></p><ul><li>仅靠直立环无法实现真平衡（假平衡特征）：<ul><li>抗干扰性差（一推就倒）</li><li>持久性弱（只能平衡片刻）</li><li><em>例外情况：结构设计极佳+重心超低（类似不倒翁原理）时可能实现</em></li></ul></li></ul><p><strong>关键原理</strong>：<br>直立环本质是建立&quot;平衡趋势&quot;，但存在致命缺陷：</p><ol><li><strong>响应滞后</strong>：小车快倒下时才产生足够响应，此时已错过最佳调整时机</li><li><strong>解决方案</strong>：必须加入<strong>正反馈速度环</strong>（注意！四轮车用负反馈，平衡车用正反馈）</li><li><strong>协同作用</strong>：速度环加速累积直立环输出，提升系统响应速度</li></ol><blockquote><p>结论：直立环（建立趋势） + 速度环（加速响应） = 真平衡能力</p></blockquote><hr><h2 id="二、陀螺仪硬件必看">二、陀螺仪硬件必看</h2><p><strong>致命错误</strong>：忘记接INT引脚</p><ul><li>后果：无法触发外部中断 → 无法读取角度数据</li><li>检测方法：观察初始化返回值&quot;err&quot;<ul><li><strong>err=8</strong>：<br>✓ 接线正确但通信异常（接触不良/陀螺仪晃动/未水平放置/硬件损坏）</li><li><strong>err=10</strong>：<br>✓ 引脚接错/硬件损坏/型号不匹配（必须用MPU6050）</li></ul></li></ul><hr><h2 id="三、调参实战步骤（平衡车-平衡方块-平衡单车通用）">三、调参实战步骤（平衡车/平衡方块/平衡单车通用）</h2><h3 id="第一阶段：直立环调试">第一阶段：直立环调试</h3><ol><li><strong>调KP</strong>：<ul><li>持续增大直至出现<strong>大幅度低频抖动</strong> → 略微回调（避免饱和）</li></ul></li><li><strong>加KD</strong>：<ul><li>抑制低频抖动 → 继续增大至<strong>小幅度高频抖动</strong> → 适当回调</li></ul></li><li><strong>衰减参数</strong>：<ul><li>KP/KD同时×0.6 → 系统呈现&quot;疲软&quot;状态（类似KP过小现象）</li></ul></li></ol><h3 id="第二阶段：速度环调试">第二阶段：速度环调试</h3><ol><li><strong>参数关系</strong>：保持 Ki ≈ Kp/200</li><li><strong>操作流程</strong>：<ul><li>加入正反馈速度环（必须确认极性正确）</li><li>同步提升Kp/Ki → 立即显现平衡能力</li><li>继续加大参数减小前后摆动幅度</li></ul></li></ol><h3 id="异常处理：">异常处理：</h3><ul><li><strong>剧烈抖动</strong>：降低速度环参数 或 提升直立环KD</li><li><strong>效果不佳</strong>：检查项<br>✓ 直立环参数是否过小<br>✓ 速度环极性是否错误<br>✓ 是否存在硬件故障</li></ul><h1>PID控制策略核心三问</h1><h2 id="一、增量式-vs-位置式">一、增量式 vs 位置式</h2><p><strong>重点用位置式！</strong><br>增量式底层函数不同且难调试，虽然输出是增量，但函数写法本质还是位置式。特殊情况可通过<strong>位置式输出叠加增量</strong>实现类似效果，但程序结构不改变</p><h2 id="二、串级-vs-并级">二、串级 vs 并级</h2><p><strong>优先并级结构！</strong><br>平衡小车经典案例：<br><code>直立环 + 速度环 + 转向环</code></p><ul><li>直立环与速度环输出直接叠加</li><li>转向环差速处理（左轮+右轮-）</li></ul><p><strong>串级触发条件</strong>：<br>当被控对象已存在基础控制环时（如已有速度环控制小车），需将新控制量（如距离误差）<strong>嵌套为内环设定值</strong>，形成：<br>`距离环输出 → 速度环设定值 → 电机输出</p><h2 id="三、单环-vs-多环">三、单环 vs 多环</h2><p><strong>平衡系必备双环！</strong></p><ul><li><strong>基础配置</strong>：<code>直立环 + 速度环</code>并级</li><li><strong>特例处理</strong>：空心杯电机无编码器时（如风力小车），用<code>直立环P+D+I</code>，以积分项I等效速度环</li><li><strong>功能扩展</strong>：添加转向环实现差速控制，形成三环并级架构</li></ul><h2 id="PID调试工具">PID调试工具</h2><p>仿真验证推荐：<br><a href="https://bitbci.github.io/Tools/pidSimulation/">BitBCI PID Simulator</a><br><a href="https://pid-simulator-web.skythinker.top/">SkyThinker PID实验室</a></p>]]></content>
    
    
    <summary type="html">包含寒假调参的经验。</summary>
    
    
    
    <category term="嵌入式学习" scheme="https://choas8.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="PID控制" scheme="https://choas8.github.io/tags/PID%E6%8E%A7%E5%88%B6/"/>
    
    <category term="自平衡小车" scheme="https://choas8.github.io/tags/%E8%87%AA%E5%B9%B3%E8%A1%A1%E5%B0%8F%E8%BD%A6/"/>
    
    <category term="调参技巧" scheme="https://choas8.github.io/tags/%E8%B0%83%E5%8F%82%E6%8A%80%E5%B7%A7/"/>
    
    <category term="陀螺仪" scheme="https://choas8.github.io/tags/%E9%99%80%E8%9E%BA%E4%BB%AA/"/>
    
    <category term="控制算法" scheme="https://choas8.github.io/tags/%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="https://choas8.github.io/posts/318586e3.html"/>
    <id>https://choas8.github.io/posts/318586e3.html</id>
    <published>2025-02-26T05:40:03.000Z</published>
    <updated>2025-03-04T06:43:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="欢迎来到我的博客">欢迎来到我的博客</h2><p>这是我的个人博客第一篇文章，建立这个博客我主要收获了以下：</p><h3 id="一、掌握技术工具链">一、掌握技术工具链</h3><ul><li><strong>Git版本控制</strong><br>通过博客搭建实战Git操作：<br><code>仓库初始化 -&gt; 代码提交 -&gt; 远程推送</code> 完整工作流</li><li><strong>网站部署实践</strong><br>使用Hexo + GitHub Pages实现自动化部署</li><li><strong>Markdown写作</strong><br>本文即采用标准Markdown语法书写</li></ul><h3 id="二、知识体系化管理">二、知识体系化管理</h3><ul><li>将散落在本地电脑的学习笔记分类归档</li><li>计划未来几年学习的专题：<br>✔️   c语言/PYTHON/<br>✔️   STM32/ESP32/CH32/MSP<br>✔️   FREERTOS/RT-THread<br>✔️   OPENCV<br>✔️   OPENMV/K230<br>✔️   LINUX基础<br>✔️   web全栈（前端后端）<br>✔️   ai的Prompt<br>✔️   PCB<br>✔️   物联网<br>✔️   仿真软件的使用<br>✔️   论文<br>✔️   git基础<br>✔️   QT开发<br>✔️   LVGL开发图形化界面</li></ul><h3 id="三、结语">三、结语</h3><ul><li>我是一名大一小白，欢迎一起学习交流，本站有不足之处，提提意见也是可以的。</li></ul>]]></content>
    
    
    <summary type="html">包含为什么我要建立这个博客。</summary>
    
    
    
    <category term="技术日志" scheme="https://choas8.github.io/categories/%E6%8A%80%E6%9C%AF%E6%97%A5%E5%BF%97/"/>
    
    
    <category term="Git入门" scheme="https://choas8.github.io/tags/Git%E5%85%A5%E9%97%A8/"/>
    
    <category term="Hexo部署" scheme="https://choas8.github.io/tags/Hexo%E9%83%A8%E7%BD%B2/"/>
    
    <category term="Markdown" scheme="https://choas8.github.io/tags/Markdown/"/>
    
    <category term="博客搭建" scheme="https://choas8.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="学习笔记" scheme="https://choas8.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>（忘了看看）Markdown语法与外挂标签写法汇总</title>
    <link href="https://choas8.github.io/posts/2013454d.html"/>
    <id>https://choas8.github.io/posts/2013454d.html</id>
    <published>2025-02-26T05:40:03.000Z</published>
    <updated>2025-03-04T06:43:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1>1.Markdown语法自带格式</h1><div class="note info flat"><p>参考：<a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown语法图文全面详解(10分钟学会)</a></p></div><div class="note warning flat"><p>注意：此页面偶尔会存在CSS冲突问题!</p></div><h2 id="1-1-代码块">1.1 代码块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br><span class="line">\```</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-2-多级标题">1.2 多级标题</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>见本文章标题!</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-3-文字样式">1.3 文字样式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<s>删除</s>线演示</p><p><font size = 5>5号字</font><br><font face="黑体">黑体</font><br><font color=blue>蓝色</font></p><table><tr><td bgcolor=MistyRose>这里的背景色是：MistyRosen，此处输入任意想输入的内容</td></tr></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note info flat"><p>上述要点可参考:<a href="https://blog.csdn.net/qq_43732429/article/details/108034518">【Markdown语法】字体颜色大小及文字底色设置</a></p></div><h2 id="1-4-引用">1.4 引用</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><blockquote><p>Java<br>二级引用演示<br>MySQL</p><blockquote><p>外键</p><p>事务</p><p><strong>行级锁</strong>(引用内部一样可以用格式)</p></blockquote><p>…</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-5-分割线">1.5 分割线</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><hr><hr><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-6-列表-跟空格都可以">1.6 列表(*,+,-跟空格都可以)</h2><h3 id="1-6-1-无序列表">1.6.1 无序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> Java</span><br><span class="line"><span class="bullet">*</span> Python</span><br><span class="line"><span class="bullet">*</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> Java</span><br><span class="line"><span class="bullet">+</span> Python</span><br><span class="line"><span class="bullet">+</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> Java</span><br><span class="line"><span class="bullet">-</span> Python</span><br><span class="line"><span class="bullet">-</span> ...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="1-6-2-有序列表">1.6.2 有序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 注意后面有空格</span></span><br><span class="line"><span class="bullet">1.</span> </span><br><span class="line"><span class="bullet">2.</span> </span><br><span class="line"><span class="bullet">3.</span> </span><br><span class="line"><span class="bullet">4.</span> </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li></li><li></li><li></li><li></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-7-图片">1.7 图片</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/pusheencode.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>本地图片:<br><img src="/assets/pusheencode.webp" alt="示例图片" style="zoom:50%;" /><br>在线图片:<br><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png" alt="code"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-8-表格">1.8 表格</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-9-公式">1.9 公式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>$$<br>\Gamma(z)=\int_0^\infty t^{z-1}e^{-t}dt.<br>$$</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1>2.Butterfly外挂标签</h1><div class="note info flat"><p>这部分参考安知鱼:<a href="https://anzhiy.cn/posts/7d58.html">基于Butterfly的外挂标签引入</a></p></div><h2 id="2-1-行内文本样式-text">2.1 行内文本样式 text</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-2-行内文本-span">2.2 行内文本 span</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-3-段落文本-p">2.3 段落文本 p</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">语法格式</button></li><li class="tab"><button type="button" data-href="#分栏-5">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-6">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-7">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 渲染演示 --&gt;</span><br><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">## 2.4 引用note</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% tabs 分栏 %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 通用配置 --&gt;</span><br><span class="line"></span><br><span class="line"><span class="code">```Markdown</span></span><br><span class="line"><span class="code">note:</span></span><br><span class="line"><span class="code">  # Note tag style values:</span></span><br><span class="line"><span class="code">  #  - simple    bs-callout old alert style. Default.</span></span><br><span class="line"><span class="code">  #  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line"><span class="code">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line"><span class="code">  #  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line"><span class="code">  style: simple</span></span><br><span class="line"><span class="code">  icons: false</span></span><br><span class="line"><span class="code">  border_radius: 3</span></span><br><span class="line"><span class="code">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line"><span class="code">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line"><span class="code">  light_bg_offset: 0</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 自带icon</span></span><br><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"><span class="section"># 外部icon</span></span><br><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-5"><p>1.自带icon</p><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / primary / success / info / warning / danger ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】不显示 icon</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table><p>2.外部icon</p><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / blue / pink / red / purple / orange / green ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-6"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-7"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div>2.`modern`样式<div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div><p>3.<code>flat</code>样式</p><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><p>4.<code>disabled</code>样式</p><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>默认 提示块标签</p></div><div class="note default no-icon flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>primary 提示块标签</p></div><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>2.<code>modern</code>样式</p><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>3.<code>flat</code>样式</p><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>4.<code>disabled</code>样式</p><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了…</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-5-上标标签-tip">2.5 上标标签 tip</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li><code>自定义图标</code>: 支持fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;default&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip info %&#125;info&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-6-动态标签-anima">2.6 动态标签 anima</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="note info flat"><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.On DOM load（当页面加载时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>2.调整动画速度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>3.On hover（当鼠标悬停时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>4.On parent hover（当鼠标悬停在父级元素时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div>2.调整动画速度<div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div>3.On hover（当鼠标悬停时显示动画）<div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div>4.On parent hover（当鼠标悬停在父级元素时显示动画）<div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-7-复选列表-checkbox">2.7 复选列表 checkbox</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: plus, minus, times</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-8-单选列表-radio">2.8 单选列表 radio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-9-时间轴-timeline">2.9 时间轴 timeline</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选）[,color] %&#125;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>title</code>:标题/时间线</li><li><code>color</code>:<code>timeline</code>颜色:default(留空) / blue / pink / red / purple / orange / green</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) --&gt;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></div></div><div class='timeline-item-content'><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></div></div><div class='timeline-item-content'><p>不需要额外处理。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></div></div><div class='timeline-item-content'><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-10-链接卡片-link">2.10 链接卡片 link</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-11-按钮-btns">2.11 按钮 btns</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;</code>标题<code>&lt;/b&gt;</code>和<code>&lt;p&gt;</code>描述文字<code>&lt;/p&gt;</code></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>wide</td><td>宽一点的按钮</td></tr><tr><td>fill</td><td>填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td>center</td><td>居中，按钮之间是固定间距</td></tr><tr><td>around</td><td>居中分散</td></tr><tr><td>grid2</td><td>等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td>grid3</td><td>等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td>grid4</td><td>等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td>grid5</td><td>等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>2.或者含有图标的按钮</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><div class="btns circle grid5">            <a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>          </div>2.或者含有图标的按钮<div class="btns rounded grid5">            <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p red'>专业版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p green'>免费版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png'></a>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-12-github卡片-ghcard">2.12 github卡片 ghcard</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><table><thead><tr><th><strong>参数名</strong></th><th>取值</th><th>释义</th></tr></thead><tbody><tr><td>hide</td><td>stars,commits,prs,issues,contribs</td><td>隐藏指定统计</td></tr><tr><td>count_private</td><td>true</td><td>将私人项目贡献添加到总提交计数中</td></tr><tr><td>show_icons</td><td>true</td><td>显示图标</td></tr><tr><td>theme</td><td>查阅:<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td>主题</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.用户信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard fomalhaut1998 %&#125;                | &#123;% ghcard fomalhaut1998, theme=vue %&#125;             |</span><br><span class="line">| ----------------------------------------- | ------------------------------------------------- |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=buefy %&#125;   | &#123;% ghcard fomalhaut1998, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=onedark %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-dark %&#125;  |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=algolia %&#125; | &#123;% ghcard fomalhaut1998, theme=calm %&#125;            |</span><br></pre></td></tr></table></figure><p>2.仓库信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125;                | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125;             |</span><br><span class="line">| ---------------------------------------------------------- | ------------------------------------------------------------------ |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125;   | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125;  |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125;            |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.用户信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=calm&show_owner=true"/></a></td></tr></tbody></table><p>2.仓库信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-13-github徽标-ghbdage">2.13 github徽标 ghbdage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.基本参数,定义徽标左右文字和图标</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure><p>3.拓展参数，支持shields的API的全部参数内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.基本参数,定义徽标左右文字和图标</p><p><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object></p><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><p><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object><br>//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object></p><p>3.拓展参数，支持shields的API的全部参数内容</p><p><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object><br>//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-14-网站卡片-sites">2.14 网站卡片 sites</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="site-card-group"><a class="site-card" href="https://fomalhaut1998.com"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png"/><span class="title">fomalhaut1998</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://inkss.cn"><div class="img"><img src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://blog.mhuig.top"><div class="img"><img src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png"/><span class="title">MHuiG</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://colsrch.top"><div class="img"><img src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://linhk1606.github.io"><div class="img"><img src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-15-行内图片-inlineimage">2.15 行内图片 inlineimage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>高度</code>：height=20px</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-16-单张图片-image">2.16 单张图片 image</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>2.指定宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br></pre></td></tr></table></figure><p>3.指定宽度并添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>4.设置占位背景色：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>2..指定宽度<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div>3.指定宽度并添加描述：<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>4.设置占位背景色：<div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-17-音频-audio">2.17 音频 audio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-18-视频-video">2.18 视频 video</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>对齐方向</code>：left, center, right</li><li><code>列数</code>：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.100%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure><p>2.50%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><p>3.25%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.100%宽度</p><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>2.50%宽度<div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div>3.25%宽度<div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-19-相册-gallery">2.19 相册 gallery</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>gallerygroup 相册图库</li></ul><table><thead><tr><th>参数名</th><th>释义</th></tr></thead><tbody><tr><td>name</td><td>图库名字</td></tr><tr><td>description</td><td>图库描述</td></tr><tr><td>link</td><td>链接到对应相册的地址</td></tr><tr><td>img-url</td><td>图库封面</td></tr></tbody></table><ul><li><p>gallery 相册</p><p>区别于旧版的Gallery相册,新的Gallery相册会自动根据图片长度进行排版，书写也更加方便，与markdown格式一样。可根据需要插入到相应的md。无需再自己配置长宽。<strong>建议在粘贴时故意使用长短、大小、横竖不一的图片</strong>，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup MC 在Rikkaの六花服务器里留下的足迹 &#x27;/gallery/MC/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup Gundam 哦咧哇gundam哒！ &#x27;/gallery/Gundam/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png %&#125;</span><br><span class="line">&#123;% galleryGroup I-am-Akilar 某种意义上也算自拍吧 &#x27;/gallery/I-am-Akilar/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.gallerygroup 相册图库</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href='/gallery/MC/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Gundam</div>  <p>哦咧哇gundam哒！</p>  <a href='/gallery/Gundam/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">I-am-Akilar</div>  <p>某种意义上也算自拍吧</p>  <a href='/gallery/I-am-Akilar/'></a>  </figcaption>  </figure></div>2.gallery 相册<div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-20-折叠框-folding">2.20 折叠框 folding</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><!-- tab 参数配置 --><ol><li><p><code>颜色</code>：blue, cyan, green, yellow, red</p></li><li><p><code>状态</code>：状态填写 open 代表默认打开。</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-21-分栏-tab">2.21 分栏 tab</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>Unique name :</p><ul><li><p>选项卡块标签的唯一名称，不带逗号。</p></li><li><p>将在#id中用作每个标签及其索引号的前缀。</p></li><li><p>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</p></li><li><p>仅当前帖子/页面的URL必须是唯一的！</p></li></ul></li><li><p>[index]:</p><ul><li><p>活动选项卡的索引号。</p></li><li><p>如果未指定，将选择第一个标签（1）。</p></li><li><p>如果index为-1，则不会选择任何选项卡。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[Tab caption]:</p><ul><li><p>当前选项卡的标题。</p></li><li><p>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</p></li><li><p>如果未指定标题，但指定了图标，则标题将为空。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[@icon]:</p><ul><li><p>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</p></li><li><p>可以指定带空格或不带空格；</p></li><li><p>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</p></li><li><p>可选参数。</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.Demo 1 - 预设选择第一个【默认】</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>2.Demo 2 - 预设选择tabs</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>3.Demo 3 - 没有预设值</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.Demo 1 - 预设选择第一个【默认】</p><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>2.Demo 2 - 预设选择tabs</p><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>3.Demo 3 - 没有预设值</p><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-22-诗词标签-poem">2.22 诗词标签 poem</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><ol><li><code>title</code>：诗词标题</li><li><code>author</code>：作者，可以不写</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-23-阿里图标-icon">2.23 阿里图标 icon</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>icon-xxxx</code>：表示图标<code>font-class</code>,可以在自己的阿里矢量图标库项目的<code>font-class</code>引用方案内查询并复制。</li><li><code>font-size</code>：表示图标大小，直接填写数字即可，单位为<code>em</code>。图标大小默认值为<code>1em</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon icon-rat<span class="emphasis">_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-ox_</span>chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-tiger<span class="emphasis">_yin,5 %&#125;&#123;% icon icon-tiger,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rabbit_</span>mao,1 %&#125;&#123;% icon icon-rabbit,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dragon<span class="emphasis">_chen,3 %&#125;&#123;% icon icon-dragon,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-snake_</span>si,5 %&#125;&#123;% icon icon-snake,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-horse<span class="emphasis">_wu %&#125;&#123;% icon icon-horse,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-goat_</span>wei,3 %&#125;&#123;% icon icon-goat,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-monkey<span class="emphasis">_shen,5 %&#125;&#123;% icon icon-monkey,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rooster_</span>you %&#125;&#123;% icon icon-rooster,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dog<span class="emphasis">_xu,3 %&#125;&#123;% icon icon-dog,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-boar_</span>hai,5 %&#125;&#123;% icon icon-boar,6 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-24-特效标签wow">2.24 特效标签wow</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow [animete],[duration],[delay],[offset],[iteration] %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endwow %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>animate</code>: 动画样式，效果详见<a href="https://animate.style/">animate.css参考文档</a></li><li><code>duration</code>: 选填项，动画持续时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>delay</code>: 选填项，动画开始的延迟时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>offset</code>: 选填项，开始动画的距离（相对浏览器底部）</li><li><code>iteration</code>: 选填项，动画重复的次数</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.flip动画效果。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>3.slideInRight动画效果，持续5s，延时5s</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__slideInRight,5s,5s %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note orange &#x27;fas fa-car&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__heartBeat,,5s,,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note red &#x27;fas fa-battery-half&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`heartBeat`动画效果，延时`5s`，重复`10`次。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.flip动画效果。</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>3.slideInRight动画效果，持续5s，延时5s</p><div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' ><div class="note orange icon-padding modern"><i class="note-icon fas fa-car"></i><p><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。</p></div></div><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='10' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-25-进度条-progress">2.25  进度条 progress</h2><div class="note info flat"><p>进度条标签参考<a href="https://rongbuqiu.com/jdt.html">沂佰孜猫-给HEXO文章添加彩色进度条</a>。<br>源样式提取自<a href="https://zwying0814.gitbook.io/cuteen/">Cuteen</a>主题。</p></div><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>width</code>: 0到100的阿拉伯数字</li><li><code>color</code>: 颜色，取值有red,yellow,green,cyan,blue,gray</li><li><code>text</code>:进度条上的文字内容</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-26-注释-notation">2.26 注释 notation</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota [label] , [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p><code>label</code>: 注释词汇</p></li><li><p><code>text</code>: 悬停显示的注解内容</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-27-气泡注释-bubble">2.27 气泡注释 bubble</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bubble [content] , [notation] ,[background-color] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>content</code>: 注释词汇</li><li><code>notation</code>: 悬停显示的注解内容</li><li><code>background-color</code>: 可选，气泡背景色。默认为“#71a4e3”</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot; %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span></span>，<span class="bubble-content">flex布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">Flex 是 Flexible Box 的缩写，意为弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;</span></span>，<span class="bubble-content">transform变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span></span>，animation的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span></span>写法，还有今天刚看到的<span class="bubble-content">clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span></span>属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-28-引用文献-reference">2.28 引用文献 reference</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% referto [id] , [literature] %&#125;</span><br><span class="line">&#123;% referfrom [id] , [literature] , [url] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>referto 引用上标</p><ul><li><p><code>id</code>: 上标序号内容，需与referfrom标签的id对应才能实现跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li></ul></li><li><p>referfrom 引用出处</p><ul><li><p><code>id</code>: 序号内容，需与referto标签的id对应才能实现 跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li><li><p><code>url</code>: 引用的参考文献链接，可省略</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Akilarの糖果屋(akilar.top)是一个私人性质的博客&#123;% referto &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27; %&#125;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架&#123;% referto &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27; %&#125;，Butterfly主题&#123;% referto &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">本项目参考了Volantis&#123;% referto &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27; %&#125;的标签样式。引入<span class="code">`[tag].js`</span>，并针对<span class="code">`butterfly`</span>主题修改了相应的<span class="code">`[tag].styl`</span>。在此鸣谢<span class="code">`Volantis`</span>主题众开发者。</span><br><span class="line">主要参考内容包括各个volantis的内置标签插件文档&#123;% referto &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27; %&#125;</span><br><span class="line">Butterfly主题的各个衍生魔改&#123;% referto &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27; %&#125;&#123;% referto &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27; %&#125;&#123;% referto &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27; %&#125;&#123;% referto &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% referfrom &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27;,&#x27;https://jq.qq.com/?<span class="emphasis">_wv=1027&amp;k=pGLB2C0N&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27;,&#x27;https://hexo.io/zh-cn/docs/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27;,&#x27;https://butterfly.js.org/posts/21cfbf15/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27;,&#x27;https://volantis.js.org/v5/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27;,&#x27;https://volantis.js.org/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27;,&#x27;https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27;,&#x27;https://lovelijunyi.gitee.io/posts/c898.html&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27;,&#x27;https://github.com/l-lin/font-awesome-animation&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27;,&#x27;https://www.antmoe.com/posts/3b43914f/&#x27; %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>Akilarの糖果屋(akilar.top)是一个私人性质的博客<span class="hidden-anchor" id="referto_[1]"></span><sup class="reference"><a href="#referfrom_[1]">[1]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Akilarの糖果屋群聊简介</span><span class="reference-title">参考资料</span></span></span>，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架<span class="hidden-anchor" id="referto_[2]"></span><sup class="reference"><a href="#referfrom_[2]">[2]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Hexo中文文档</span><span class="reference-title">参考资料</span></span></span>，Butterfly主题<span class="hidden-anchor" id="referto_[3]"></span><sup class="reference"><a href="#referfrom_[3]">[3]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档(一) 快速开始</span><span class="reference-title">参考资料</span></span></span></p><p>本项目参考了Volantis<span class="hidden-anchor" id="referto_[4]"></span><sup class="reference"><a href="#referfrom_[4]">[4]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">hexo-theme-volantis 标签插件</span><span class="reference-title">参考资料</span></span></span>的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。<br>主要参考内容包括各个volantis的内置标签插件文档<span class="hidden-anchor" id="referto_[5]"></span><sup class="reference"><a href="#referfrom_[5]">[5]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Volantis文档:内置标签插件</span><span class="reference-title">参考资料</span></span></span><br>Butterfly主题的各个衍生魔改<span class="hidden-anchor" id="referto_[6]"></span><sup class="reference"><a href="#referfrom_[6]">[6]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档:标签外挂（Tag Plugins</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[7]"></span><sup class="reference"><a href="#referfrom_[7]">[7]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小弋の生活馆全样式预览</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[8]"></span><sup class="reference"><a href="#referfrom_[8]">[8]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">l-lin-font-awesome-animation</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[9]"></span><sup class="reference"><a href="#referfrom_[9]">[9]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小康的butterfly主题使用文档</span><span class="reference-title">参考资料</span></span></span></p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://jq.qq.com/?_wv=1027&k=pGLB2C0N">Akilarの糖果屋群聊简介</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[3]"></span><a class="reference-anchor" href="#referto_[3]">[3]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安装文档(一) 快速开始</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[4]"></span><a class="reference-anchor" href="#referto_[4]">[4]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/v5/tag-plugins/">hexo-theme-volantis 标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[5]"></span><a class="reference-anchor" href="#referto_[5]">[5]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[6]"></span><a class="reference-anchor" href="#referto_[6]">[6]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[7]"></span><a class="reference-anchor" href="#referto_[7]">[7]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[8]"></span><a class="reference-anchor" href="#referto_[8]">[8]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[9]"></span><a class="reference-anchor" href="#referto_[9]">[9]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-29-PDF展示">2.29 PDF展示</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf 文件路径 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>文件路径</code>: 可以是相对路径或者是在线链接</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 1.本地文件:在md文件路径下创建一个同名文件夹，其内放pdf文件名为xxx.pdf的文件</span></span><br><span class="line">&#123;% pdf xxx.pdf %&#125;</span><br><span class="line"><span class="section"># 2.在线链接</span></span><br><span class="line">&#123;% pdf https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>2.在线链接(要放到最外层才能起作用)</p><pre><code>&lt;div class=&quot;row&quot;&gt;&lt;embed src=&quot;https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;&lt;/div&gt;</code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-30-Hexo-tag-map-插件">2.30 Hexo-tag-map 插件</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% + 标签值 + 经度 + 纬度 + 文本 + 缩放等级 + 宽 + 高 + 默认图层 + %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th style="text-align:center">地图名</th><th style="text-align:center">标签值 &lt;必填&gt;</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">缩放等级 (默认 14)</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">默认图层 (默认 1)</th></tr></thead><tbody><tr><td style="text-align:center">混合地图</td><td style="text-align:center">map</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~7</td></tr><tr><td style="text-align:center">谷歌地图</td><td style="text-align:center">googleMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~20</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">高德地图</td><td style="text-align:center">gaodeMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">百度地图</td><td style="text-align:center">baiduMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 4~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~2</td></tr><tr><td style="text-align:center">Geoq 地图</td><td style="text-align:center">geoqMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~5</td></tr><tr><td style="text-align:center">openstreet 地图</td><td style="text-align:center">openstreetMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">不支持此参数</td></tr></tbody></table><ol><li>参数之间，用英文逗号相隔</li><li>参数必须按上述事例顺序输入，不得为空</li><li>同一个页面，同一组经纬度值，只能插入一个相同标签值的地图 (若有需要，可以将第二个地图上，经度或纬度末尾删除一两个数)</li><li>参数取值必须在上述范围内</li><li>默认图层：即地图叠加层的值，默认常规地图还是卫星地图，可按地图显示顺序取值</li><li>缩放等级，数字越大，地图比例尺越小，显示的越精细</li><li>除标签值外，其他参数选填，但 每个参数的左边的参数必填</li><li>谷歌地图需要外网才能加载查看</li></ol><p>坐标获取：<a href="https://lbs.amap.com/tools/picker">高德地图坐标拾取系统</a> 、<a href="https://api.map.baidu.com/lbsapi/getpoint/index.html">百度地图坐标拾取系统</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% map 120.101101,30.239119 %&#125;</span><br><span class="line">&#123;% googleMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！ %&#125;</span><br><span class="line">&#123;% geoqMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！, 13, 90%, 320px, 3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div class="map-box" style="margin: 0.8rem 0 1.6rem 0;"><div id="map-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div></div><script type="text/javascript">var normalm=L.tileLayer.chinaProvider('GaoDe.Normal.Map',{maxZoom:20,minZoom:1,attribution:'高德地图'});var imgm=L.tileLayer.chinaProvider('GaoDe.Satellite.Map',{maxZoom:20,minZoom:1,attribution:'高德地图'});var imga=L.tileLayer.chinaProvider('GaoDe.Satellite.Annotion',{maxZoom:20,minZoom:1,attribution:'高德地图'});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:20,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'});routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1,attribution:'Google Maps'});var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:21,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm]),image=L.layerGroup([imgm,imga]);var baseLayers={"高德地图":normal,"智图地图":normalm1,"谷歌地图":normalMap,"高德卫星地图":imgm,"谷歌卫星地图":satelliteMap,"高德卫星标注":image,"谷歌卫星标注":routeMap};var mymap=L.map('map-120.101101-30.239119',{center:[30.239119,120.101101],zoom:14,layers:[normal],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);</script><br><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="googleMap-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:22,minZoom:1,attribution:'Google Maps'});var baseLayers={"谷歌地图":normalMap,"谷歌卫星图":satelliteMap,"谷歌卫星标注": routeMap};var overlayLayers={};var mymap=L.map("googleMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:14,layers:[normalMap],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="geoqMap-120.101101-30.239119" style="max-width:90%; height:320px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm2=L.tileLayer.chinaProvider('Geoq.Normal.PurplishBlue',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm3=L.tileLayer.chinaProvider('Geoq.Normal.Gray',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm4=L.tileLayer.chinaProvider('Geoq.Normal.Warm',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm5=L.tileLayer.chinaProvider('Geoq.Theme.Hydro',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm1,normalm2,normalm3,normalm4,normalm5]);var baseLayers={"智图地图":normalm1,"午夜蓝":normalm2,"灰色":normalm3,"暖色":normalm4,"水系":normalm5};var mymap=L.map("geoqMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:13,layers:[normalm3],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-31-隐藏块">2.31 隐藏块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>content：要隐藏的内容</li><li>display：展示前按钮显示的文字（可选）</li><li>bg：按钮的背景颜色（可选）</li><li>color：按钮显示的文字的颜色（可选）</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock 点我预览, blue %&#125;</span><br><span class="line">这里有张图片：</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;image (1)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:67%;&quot;</span> /&gt;</span></span></span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="hide-block"><button type="button" class="hide-button" style="background-color:  blue;">点我预览    </button><div class="hide-content"><p>这里有张图片：<br><img src="https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb" alt="image (1)" style="zoom:67%;" /></p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
    <summary type="html">本文汇总Markdown格式以及外挂标签在网页端的渲染效果，可作为文档进行查询</summary>
    
    
    
    <category term="技术笔记" scheme="https://choas8.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Markdown" scheme="https://choas8.github.io/tags/Markdown/"/>
    
    <category term="Hexo" scheme="https://choas8.github.io/tags/Hexo/"/>
    
    <category term="外挂标签" scheme="https://choas8.github.io/tags/%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE/"/>
    
    <category term="Butterfly" scheme="https://choas8.github.io/tags/Butterfly/"/>
    
    <category term="博客写作" scheme="https://choas8.github.io/tags/%E5%8D%9A%E5%AE%A2%E5%86%99%E4%BD%9C/"/>
    
  </entry>
  
</feed>
